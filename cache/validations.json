{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "10cb9d90bac78064307a7e140b030bf19bd66378c214e7d99e7454d285a4b2ec",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "a4200fe7dc18e3a162e7d6db8b38ccb5cdd13bdf1ff8c01d3b966384d242129a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "766403937e883cccabe1e6b62efdc46cc97641bf25edbdcd115007104dc21abd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "99b53078bbcc563b4c76b118b3237f43eb09575148f7a9c2a0023911229fdc66",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A": {
        "src": "contracts/ERC721A.sol:39",
        "version": {
          "withMetadata": "2d0d7bc353c08a4804da47b1feb8d1a28fe95824584167a13da187db1d97b75e",
          "withoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5",
          "linkedWithoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "contracts/ERC721A.sol:147"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Merkle.sol:ERC721Merkle": {
        "src": "contracts/ERC721Merkle.sol:8",
        "version": {
          "withMetadata": "2bd7a7efadc0b1a92e1c361ffa93eca2af5d841232556d10c8872d793d844334",
          "withoutMetadata": "27670acd8955a9eb8a93f841baa461a439facc60dd701e5eec19f7ad21351b21",
          "linkedWithoutMetadata": "27670acd8955a9eb8a93f841baa461a439facc60dd701e5eec19f7ad21351b21"
        },
        "inherit": [
          "contracts/ERC721Template.sol:ERC721Template",
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "setTier(uint256,string,bytes32,uint256,uint256,uint256)",
          "enableTier(uint256)",
          "getTierIds()",
          "getMintEligibility(uint256,address,bytes32[])",
          "disableTier(uint256)",
          "setTierSaleStartTime(uint256,uint256)",
          "setTierPrice(uint256,uint256)",
          "setTierMaxMintAmount(uint256,uint256)",
          "setTierMerkleRoot(uint256,bytes32)",
          "getTierDetails(uint256)",
          "whitelistMint(uint256,uint256,bytes32[])",
          "whitelistMintWithERC20ChainlinkPrice(uint256,uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Merkle",
            "src": "contracts/ERC721Merkle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            },
            {
              "label": "tiers",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_uint256,t_struct(Tier)4406_storage)",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:17"
            },
            {
              "label": "tierIds",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Tier)4406_storage)": {
              "label": "mapping(uint256 => struct ERC721Merkle.Tier)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Tier)4406_storage": {
              "label": "struct ERC721Merkle.Tier",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maxMintAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "saleStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "mints",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Template.sol:ERC721Template": {
        "src": "contracts/ERC721Template.sol:10",
        "version": {
          "withMetadata": "397992ad1d6252825a435719cab2e1a03e35f3adc22c00f7745c11640fc779bb",
          "withoutMetadata": "e1c22d05c1e4681b0bbb0c8bdd67ddb8d3589b5ba772af70fcc91295148827fa",
          "linkedWithoutMetadata": "e1c22d05c1e4681b0bbb0c8bdd67ddb8d3589b5ba772af70fcc91295148827fa"
        },
        "inherit": [
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "tokenURI(uint256)",
          "getPublicMintEligibility()",
          "getLaunchpadDetails()",
          "getLaunchpadDetailsERC20()",
          "mint(uint256)",
          "getRequiredERC20TokensChainlink(uint256)",
          "mintWithERC20ChainlinkPrice(uint256)",
          "mintWithFixedERC20Price(uint256)",
          "adminMint(address,uint256)",
          "batchAdminMint(address[],uint256[])",
          "setPublicPrice(uint256)",
          "setBaseURI(string)",
          "setNotRevealedURI(string)",
          "setMaxSupply(uint256)",
          "togglePublicSaleActive()",
          "setPublicSaleStartTime(uint256)",
          "setPublicMaxMintAmount(uint256)",
          "toggleReveal()",
          "setDefaultRoyaltyInfo(address payable,uint256)",
          "setTokenRoyaltyInfo(uint256,address payable,uint256)",
          "setContractURI(string)",
          "setERC20TokenAddress(address)",
          "setErc20FixedPricePerToken(uint256)",
          "setERC20PriceFeedAddress(address)",
          "setETHPriceFeedAddress(address)",
          "setERC20DiscountIn10000(uint256)",
          "royaltyInfo(uint256,uint256)",
          "withdrawFixedComission()",
          "withdraw()",
          "withdrawERC20(address)",
          "setTradingEnabled(bool)",
          "addToBlacklist(address)",
          "removeFromBlacklist(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Template",
            "src": "contracts/ERC721Template.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "publicSaleStartTime",
            "src": "contracts/ERC721Template.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalComissionWithdrawn",
            "src": "contracts/ERC721Template.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tradingEnabled",
            "src": "contracts/ERC721Template.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/IERC721A.sol:IERC721A": {
        "src": "contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "10cb9d90bac78064307a7e140b030bf19bd66378c214e7d99e7454d285a4b2ec",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "a4200fe7dc18e3a162e7d6db8b38ccb5cdd13bdf1ff8c01d3b966384d242129a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "766403937e883cccabe1e6b62efdc46cc97641bf25edbdcd115007104dc21abd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "99b53078bbcc563b4c76b118b3237f43eb09575148f7a9c2a0023911229fdc66",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A": {
        "src": "contracts/ERC721A.sol:39",
        "version": {
          "withMetadata": "2d0d7bc353c08a4804da47b1feb8d1a28fe95824584167a13da187db1d97b75e",
          "withoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5",
          "linkedWithoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "contracts/ERC721A.sol:147"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Merkle.sol:ERC721Merkle": {
        "src": "contracts/ERC721Merkle.sol:8",
        "version": {
          "withMetadata": "58483c50eb97687cb988bacced60991edd16f72dfcdb963a7f7c6fbf9fbf83cb",
          "withoutMetadata": "99f9233b8b7e29a12d556fe8026ca336a2f5d2bed104d205d92b7434b6b38993",
          "linkedWithoutMetadata": "99f9233b8b7e29a12d556fe8026ca336a2f5d2bed104d205d92b7434b6b38993"
        },
        "inherit": [
          "contracts/ERC721Template.sol:ERC721Template",
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "setTier(uint256,string,bytes32,uint256,uint256,uint256)",
          "enableTier(uint256)",
          "getTierIds()",
          "getMintEligibility(uint256,address,bytes32[])",
          "disableTier(uint256)",
          "setTierSaleStartTime(uint256,uint256)",
          "setTierPrice(uint256,uint256)",
          "setTierMaxMintAmount(uint256,uint256)",
          "setTierMerkleRoot(uint256,bytes32)",
          "getTierDetails(uint256)",
          "whitelistMint(uint256,uint256,bytes32[])",
          "whitelistMintWithERC20ChainlinkPrice(uint256,uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Merkle",
            "src": "contracts/ERC721Merkle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 20,
              "slot": "22",
              "type": "t_uint64",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "29",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            },
            {
              "label": "tiers",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_uint256,t_struct(Tier)4406_storage)",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:17"
            },
            {
              "label": "tierIds",
              "offset": 0,
              "slot": "32",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Tier)4406_storage)": {
              "label": "mapping(uint256 => struct ERC721Merkle.Tier)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Tier)4406_storage": {
              "label": "struct ERC721Merkle.Tier",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maxMintAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "saleStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "mints",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Template.sol:ERC721Template": {
        "src": "contracts/ERC721Template.sol:10",
        "version": {
          "withMetadata": "90e7a668cba719a388b2bd2ee0ecf5a0048adb56a535c5f539d1b7a83792c496",
          "withoutMetadata": "b0cc814f1a8b6c8b6f4c20584fe29cc4738c609e679d45279b235d68e6a93411",
          "linkedWithoutMetadata": "b0cc814f1a8b6c8b6f4c20584fe29cc4738c609e679d45279b235d68e6a93411"
        },
        "inherit": [
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "tokenURI(uint256)",
          "getPublicMintEligibility()",
          "getLaunchpadDetails()",
          "getLaunchpadDetailsERC20()",
          "mint(uint256)",
          "getRequiredERC20TokensChainlink(uint256)",
          "mintWithERC20ChainlinkPrice(uint256)",
          "mintWithFixedERC20Price(uint256)",
          "adminMint(address,uint256)",
          "batchAdminMint(address[],uint256[])",
          "setPublicPrice(uint256)",
          "setBaseURI(string)",
          "setNotRevealedURI(string)",
          "setMaxSupply(uint256)",
          "togglePublicSaleActive()",
          "setPublicSaleStartTime(uint256)",
          "setPublicMaxMintAmount(uint256)",
          "toggleReveal()",
          "setDefaultRoyaltyInfo(address payable,uint256)",
          "setTokenRoyaltyInfo(uint256,address payable,uint256)",
          "setContractURI(string)",
          "setERC20TokenAddress(address)",
          "setErc20FixedPricePerToken(uint256)",
          "setERC20PriceFeedAddress(address)",
          "setETHPriceFeedAddress(address)",
          "setERC20DiscountIn10000(uint256)",
          "royaltyInfo(uint256,uint256)",
          "withdrawFixedComission()",
          "withdraw()",
          "withdrawERC20(address)",
          "setTradingEnabled(bool)",
          "addToBlacklist(address)",
          "removeFromBlacklist(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Template",
            "src": "contracts/ERC721Template.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "publicSaleStartTime",
            "src": "contracts/ERC721Template.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalComissionWithdrawn",
            "src": "contracts/ERC721Template.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tradingEnabled",
            "src": "contracts/ERC721Template.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 20,
              "slot": "22",
              "type": "t_uint64",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "29",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/IERC721A.sol:IERC721A": {
        "src": "contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "10cb9d90bac78064307a7e140b030bf19bd66378c214e7d99e7454d285a4b2ec",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "a4200fe7dc18e3a162e7d6db8b38ccb5cdd13bdf1ff8c01d3b966384d242129a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "766403937e883cccabe1e6b62efdc46cc97641bf25edbdcd115007104dc21abd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "99b53078bbcc563b4c76b118b3237f43eb09575148f7a9c2a0023911229fdc66",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A": {
        "src": "contracts/ERC721A.sol:39",
        "version": {
          "withMetadata": "2d0d7bc353c08a4804da47b1feb8d1a28fe95824584167a13da187db1d97b75e",
          "withoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5",
          "linkedWithoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "contracts/ERC721A.sol:147"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Merkle.sol:ERC721Merkle": {
        "src": "contracts/ERC721Merkle.sol:8",
        "version": {
          "withMetadata": "f1d0106a93ad92df6721cfdbd160f7d283b063df2c2dc74cd861ed5df0e449fd",
          "withoutMetadata": "2dc633af3b32714bff480de6d69955f3e3357480f5b8f496780109ee3df70a03",
          "linkedWithoutMetadata": "2dc633af3b32714bff480de6d69955f3e3357480f5b8f496780109ee3df70a03"
        },
        "inherit": [
          "contracts/ERC721Template.sol:ERC721Template",
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "setTier(uint256,string,bytes32,uint256,uint256,uint256)",
          "enableTier(uint256)",
          "getTierIds()",
          "getMintEligibility(uint256,address,bytes32[])",
          "disableTier(uint256)",
          "setTierSaleStartTime(uint256,uint256)",
          "setTierPrice(uint256,uint256)",
          "setTierMaxMintAmount(uint256,uint256)",
          "setTierMerkleRoot(uint256,bytes32)",
          "getTierDetails(uint256)",
          "whitelistMint(uint256,uint256,bytes32[])",
          "whitelistMintWithERC20ChainlinkPrice(uint256,uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Merkle",
            "src": "contracts/ERC721Merkle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 20,
              "slot": "22",
              "type": "t_uint64",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            },
            {
              "label": "tiers",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_uint256,t_struct(Tier)4406_storage)",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:17"
            },
            {
              "label": "tierIds",
              "offset": 0,
              "slot": "33",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Tier)4406_storage)": {
              "label": "mapping(uint256 => struct ERC721Merkle.Tier)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Tier)4406_storage": {
              "label": "struct ERC721Merkle.Tier",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maxMintAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "saleStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "mints",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Template.sol:ERC721Template": {
        "src": "contracts/ERC721Template.sol:10",
        "version": {
          "withMetadata": "d6ca94e400f8ec6951f69cf872aa114935a4b067906338e1cde6f8e5d6350c6c",
          "withoutMetadata": "05640bd8d56d5762ab61ed87902bae5133438050ca8fbd775976b76ba49bd3de",
          "linkedWithoutMetadata": "05640bd8d56d5762ab61ed87902bae5133438050ca8fbd775976b76ba49bd3de"
        },
        "inherit": [
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "tokenURI(uint256)",
          "getPublicMintEligibility()",
          "getLaunchpadDetails()",
          "getLaunchpadDetailsERC20()",
          "mint(uint256)",
          "getRequiredERC20TokensChainlink(uint256)",
          "mintWithERC20ChainlinkPrice(uint256)",
          "mintWithFixedERC20Price(uint256)",
          "adminMint(address,uint256)",
          "batchAdminMint(address[],uint256[])",
          "setPublicPrice(uint256)",
          "setBaseURI(string)",
          "setNotRevealedURI(string)",
          "setMaxSupply(uint256)",
          "togglePublicSaleActive()",
          "setPublicSaleStartTime(uint256)",
          "setPublicMaxMintAmount(uint256)",
          "toggleReveal()",
          "setDefaultRoyaltyInfo(address payable,uint256)",
          "setTokenRoyaltyInfo(uint256,address payable,uint256)",
          "setContractURI(string)",
          "setERC20TokenAddress(address)",
          "setErc20FixedPricePerToken(uint256)",
          "setERC20PriceFeedAddress(address)",
          "setETHPriceFeedAddress(address)",
          "setERC20DiscountIn10000(uint256)",
          "royaltyInfo(uint256,uint256)",
          "withdrawFixedComission()",
          "withdraw()",
          "withdrawERC20(address)",
          "setTradingEnabled(bool)",
          "addToBlacklist(address)",
          "removeFromBlacklist(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Template",
            "src": "contracts/ERC721Template.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "publicSaleStartTime",
            "src": "contracts/ERC721Template.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalComissionWithdrawn",
            "src": "contracts/ERC721Template.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tradingEnabled",
            "src": "contracts/ERC721Template.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 20,
              "slot": "22",
              "type": "t_uint64",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)2308_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)2308_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/IERC721A.sol:IERC721A": {
        "src": "contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "b3fd101ffacd91cd41a7980e60b46fb8fed7bc84fb86d29dad8b8c46513c6d18",
          "withoutMetadata": "5930c7b66248f13ce2fcafc29663341558b970c1976823f1d5c73417068ee9b2",
          "linkedWithoutMetadata": "5930c7b66248f13ce2fcafc29663341558b970c1976823f1d5c73417068ee9b2"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "1f4d7aab0a2a47028b3f3ecbda2e12b1b9f0e61022a8e709d27ad5f016c6487a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:23",
        "version": {
          "withMetadata": "79377d109d3c9f0b82630d1835d9890e9641281258c1772ecd5c15ca3e9a6c54",
          "withoutMetadata": "110dc509d49f8c5da4d0f48c539344b23141edd5b43dd42129402a2d87a101ed",
          "linkedWithoutMetadata": "110dc509d49f8c5da4d0f48c539344b23141edd5b43dd42129402a2d87a101ed"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:39"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_beacon",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:25"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "dfae5058e981216563dd554347cc0b12c3464943874c7d4e2cfd1c4f27db363a",
          "withoutMetadata": "512b90ef99d5c7dde65520d87b1e248ecf42737a3816da9373e3e8df5c011f95",
          "linkedWithoutMetadata": "512b90ef99d5c7dde65520d87b1e248ecf42737a3816da9373e3e8df5c011f95"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "886ccb5553c4103f0720888db50b7a54445549f7fd7313fd721eb90ab5d884bc",
          "withoutMetadata": "25050b45f14496c71568cb94ea4d9137edfa80cb63bdf0e8bc7062eeb76e0807",
          "linkedWithoutMetadata": "25050b45f14496c71568cb94ea4d9137edfa80cb63bdf0e8bc7062eeb76e0807"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyAdmin",
            "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:17",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:60",
        "version": {
          "withMetadata": "ed7980d7f05549cc3edea16dddf1ec75000ffa2292c3d1c57326d54a8aa4065a",
          "withoutMetadata": "9248108c0980b18df4236589d0ef42ea5f7ec5fe27acfb2c2ee222ada880466e",
          "linkedWithoutMetadata": "9248108c0980b18df4236589d0ef42ea5f7ec5fe27acfb2c2ee222ada880466e"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:77"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_admin",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:65"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f506142d4a117b892e0033dc786dfb04bb3528fc24d881e984a16a91aa6929eb",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "cf6a6d531476db22b5056d048b52d5f35799388113c1d1dd3e8ffad3c802e6f4",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "10cb9d90bac78064307a7e140b030bf19bd66378c214e7d99e7454d285a4b2ec",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "d6d4b15e544d53bfa3e87655141fbb9d6be899f435e5856ec97b4d0464752095",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "a4200fe7dc18e3a162e7d6db8b38ccb5cdd13bdf1ff8c01d3b966384d242129a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "766403937e883cccabe1e6b62efdc46cc97641bf25edbdcd115007104dc21abd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "99b53078bbcc563b4c76b118b3237f43eb09575148f7a9c2a0023911229fdc66",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC20Template.sol:ERC20Template": {
        "src": "contracts/ERC20Template.sol:6",
        "version": {
          "withMetadata": "2e0cd6a5bbeb76dfa4db069d4f18e10240a8033b1798f9c83f87ef05b058104f",
          "withoutMetadata": "d1006d01ae1932a13c3881b2fe6842e7a6f90a05cac564a0dd373ce1c91cefa0",
          "linkedWithoutMetadata": "d1006d01ae1932a13c3881b2fe6842e7a6f90a05cac564a0dd373ce1c91cefa0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "adminMint(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Template",
            "src": "contracts/ERC20Template.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "ERC20Template",
              "src": "contracts/ERC20Template.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A": {
        "src": "contracts/ERC721A.sol:39",
        "version": {
          "withMetadata": "2d0d7bc353c08a4804da47b1feb8d1a28fe95824584167a13da187db1d97b75e",
          "withoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5",
          "linkedWithoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "contracts/ERC721A.sol:147"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721AStoreFront.sol:ERC721AStoreFront": {
        "src": "contracts/ERC721AStoreFront.sol:39",
        "version": {
          "withMetadata": "3ff3c8b23331a50e5af716bdc3220ea7eaaf38b9b20506aecbf37d71b7abb4b6",
          "withoutMetadata": "96ed5076d1b68bf6407b13a9990d465ac72356bd29bdd552de1446f02ab31bb6",
          "linkedWithoutMetadata": "96ed5076d1b68bf6407b13a9990d465ac72356bd29bdd552de1446f02ab31bb6"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721AStoreFront",
            "src": "contracts/ERC721AStoreFront.sol:152"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:103"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:106"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:109"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:112"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:124"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:133"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:136"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:139"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:142"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:146"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)": {
              "label": "mapping(uint256 => struct ERC721AStoreFront.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)6857_storage": {
              "label": "struct ERC721AStoreFront.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721AStoreFront.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721AStoreFront.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Merkle.sol:ERC721Merkle": {
        "src": "contracts/ERC721Merkle.sol:8",
        "version": {
          "withMetadata": "2bd7a7efadc0b1a92e1c361ffa93eca2af5d841232556d10c8872d793d844334",
          "withoutMetadata": "27670acd8955a9eb8a93f841baa461a439facc60dd701e5eec19f7ad21351b21",
          "linkedWithoutMetadata": "27670acd8955a9eb8a93f841baa461a439facc60dd701e5eec19f7ad21351b21"
        },
        "inherit": [
          "contracts/ERC721Template.sol:ERC721Template",
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "setTier(uint256,string,bytes32,uint256,uint256,uint256)",
          "enableTier(uint256)",
          "getTierIds()",
          "getMintEligibility(uint256,address,bytes32[])",
          "disableTier(uint256)",
          "setTierSaleStartTime(uint256,uint256)",
          "setTierPrice(uint256,uint256)",
          "setTierMaxMintAmount(uint256,uint256)",
          "setTierMerkleRoot(uint256,bytes32)",
          "getTierDetails(uint256)",
          "whitelistMint(uint256,uint256,bytes32[])",
          "whitelistMintWithERC20ChainlinkPrice(uint256,uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Merkle",
            "src": "contracts/ERC721Merkle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            },
            {
              "label": "tiers",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_uint256,t_struct(Tier)9010_storage)",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:17"
            },
            {
              "label": "tierIds",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Tier)9010_storage)": {
              "label": "mapping(uint256 => struct ERC721Merkle.Tier)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Tier)9010_storage": {
              "label": "struct ERC721Merkle.Tier",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maxMintAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "saleStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "mints",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ERC721Template.sol:ERC721Template": {
        "src": "contracts/ERC721Template.sol:10",
        "version": {
          "withMetadata": "397992ad1d6252825a435719cab2e1a03e35f3adc22c00f7745c11640fc779bb",
          "withoutMetadata": "e1c22d05c1e4681b0bbb0c8bdd67ddb8d3589b5ba772af70fcc91295148827fa",
          "linkedWithoutMetadata": "e1c22d05c1e4681b0bbb0c8bdd67ddb8d3589b5ba772af70fcc91295148827fa"
        },
        "inherit": [
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "tokenURI(uint256)",
          "getPublicMintEligibility()",
          "getLaunchpadDetails()",
          "getLaunchpadDetailsERC20()",
          "mint(uint256)",
          "getRequiredERC20TokensChainlink(uint256)",
          "mintWithERC20ChainlinkPrice(uint256)",
          "mintWithFixedERC20Price(uint256)",
          "adminMint(address,uint256)",
          "batchAdminMint(address[],uint256[])",
          "setPublicPrice(uint256)",
          "setBaseURI(string)",
          "setNotRevealedURI(string)",
          "setMaxSupply(uint256)",
          "togglePublicSaleActive()",
          "setPublicSaleStartTime(uint256)",
          "setPublicMaxMintAmount(uint256)",
          "toggleReveal()",
          "setDefaultRoyaltyInfo(address payable,uint256)",
          "setTokenRoyaltyInfo(uint256,address payable,uint256)",
          "setContractURI(string)",
          "setERC20TokenAddress(address)",
          "setErc20FixedPricePerToken(uint256)",
          "setERC20PriceFeedAddress(address)",
          "setETHPriceFeedAddress(address)",
          "setERC20DiscountIn10000(uint256)",
          "royaltyInfo(uint256,uint256)",
          "withdrawFixedComission()",
          "withdraw()",
          "withdrawERC20(address)",
          "setTradingEnabled(bool)",
          "addToBlacklist(address)",
          "removeFromBlacklist(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Template",
            "src": "contracts/ERC721Template.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "publicSaleStartTime",
            "src": "contracts/ERC721Template.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalComissionWithdrawn",
            "src": "contracts/ERC721Template.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tradingEnabled",
            "src": "contracts/ERC721Template.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/IERC721A.sol:IERC721A": {
        "src": "contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/Storefront.sol:Storefront": {
        "src": "contracts/Storefront.sol:7",
        "version": {
          "withMetadata": "aa080447af36ba07c2019934e03add9f968b029cd79b45d351c71690295469d8",
          "withoutMetadata": "cfb0d2313deed2f89559ee52a7f7c2a34f852b9e9e3a50f5a4dc0e1d822836c7",
          "linkedWithoutMetadata": "cfb0d2313deed2f89559ee52a7f7c2a34f852b9e9e3a50f5a4dc0e1d822836c7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERC721AStoreFront.sol:ERC721AStoreFront",
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,string)",
          "mint(string)",
          "setMintPrice(uint256)",
          "setContractURI(string)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Storefront",
            "src": "contracts/Storefront.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:103"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:106"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:109"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:112"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:124"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:133"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:136"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:139"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:142"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:146"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mintPrice",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Storefront",
              "src": "contracts/Storefront.sol:8"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "Storefront",
              "src": "contracts/Storefront.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)": {
              "label": "mapping(uint256 => struct ERC721AStoreFront.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)6857_storage": {
              "label": "struct ERC721AStoreFront.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/Diamond.sol:Diamond": {
        "src": "contracts/diamond/Diamond.sol:35",
        "version": {
          "withMetadata": "a6d7206314749ebac1027ebbf3e85655b2e309b50d9ed1b2e4cd301224a57dee",
          "withoutMetadata": "a6d7206314749ebac1027ebbf3e85655b2e309b50d9ed1b2e4cd301224a57dee",
          "linkedWithoutMetadata": "a6d7206314749ebac1027ebbf3e85655b2e309b50d9ed1b2e4cd301224a57dee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(struct IDiamond.FacetCut[],(address,address,bytes,address,address,uint256,uint256))",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Diamond",
            "src": "contracts/diamond/Diamond.sol:37"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/DiamondCutFacet.sol:DiamondCutFacet": {
        "src": "contracts/diamond/facets/DiamondCutFacet.sol:15",
        "version": {
          "withMetadata": "3ab0aeb055fbf7b6855903aaf612701db0f355adc65debac25369915a5ac2ff2",
          "withoutMetadata": "b61fc5c92d6ec1236563ab23889eb36fa22349b79290a2a929a98b9eb0166a37",
          "linkedWithoutMetadata": "b61fc5c92d6ec1236563ab23889eb36fa22349b79290a2a929a98b9eb0166a37"
        },
        "inherit": [
          "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut",
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet": {
        "src": "contracts/diamond/facets/DiamondLoupeFacet.sol:15",
        "version": {
          "withMetadata": "c31139de78af6d21c356cbab9a18f20862869e0b0006420a6fb0c94d8eadbeb8",
          "withoutMetadata": "2e34e32c5323191e2dec5f8292c73c91a47c0b5f4409bcd26cd7b922c548fed2",
          "linkedWithoutMetadata": "2e34e32c5323191e2dec5f8292c73c91a47c0b5f4409bcd26cd7b922c548fed2"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC165.sol:IERC165",
          "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe"
        ],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/OwnershipFacet.sol:OwnershipFacet": {
        "src": "contracts/diamond/facets/OwnershipFacet.sol:7",
        "version": {
          "withMetadata": "1657f208267cf6586aeab9d628e1b4bdf5fec16d6daf707cbbf448016362168e",
          "withoutMetadata": "07441ca3fe8dd7dde3307d106047c923e6472309e13ed5f0f7f88d06fd02e2cb",
          "linkedWithoutMetadata": "07441ca3fe8dd7dde3307d106047c923e6472309e13ed5f0f7f88d06fd02e2cb"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC173.sol:IERC173"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/custom/ManagementFacet.sol:IERC20": {
        "src": "contracts/diamond/facets/custom/ManagementFacet.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/custom/ManagementFacet.sol:ManagementFacet": {
        "src": "contracts/diamond/facets/custom/ManagementFacet.sol:11",
        "version": {
          "withMetadata": "9e81e6f3311d4388100a513d7c692b132555ac411124d5c2d38fd0b757676743",
          "withoutMetadata": "8b0bfc257687b7ee44ee9924e4d317e8a915b47622815052b255a9449f8b0a08",
          "linkedWithoutMetadata": "8b0bfc257687b7ee44ee9924e4d317e8a915b47622815052b255a9449f8b0a08"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPlatformFee(uint256)",
          "setPremiumDiscount(uint256)",
          "setWETHAddress(address)",
          "setPremiumNftAddress(address)",
          "getPremiumNftAddress()",
          "setMarketplacePaused(bool)",
          "withdrawETH()",
          "withdrawERC20(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:IERC20": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:IERC2981": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:Ownable": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:TransactFacet": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:25",
        "version": {
          "withMetadata": "277e5beca35373a118ab8475feac823a6191f425b406dcaf2020d0212087ff03",
          "withoutMetadata": "05fdc48e3c44ba38eee0c17bd9595e47e9848e37941ce49d0dd021553775400b",
          "linkedWithoutMetadata": "05fdc48e3c44ba38eee0c17bd9595e47e9848e37941ce49d0dd021553775400b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "createOrderHash((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256))",
          "getDomainSeparator()",
          "domain()",
          "cancelOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes))",
          "cancelAllOrders()",
          "validateOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),bytes32)",
          "acceptOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),uint256)",
          "batchAcceptOrder(struct TransactFacet.Order[],uint256[])",
          "acceptCollectionOffer(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),uint256,uint256)",
          "isPremiumHolder(address)",
          "verifySignature(bytes32,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/interfaces/IDiamond.sol:IDiamond": {
        "src": "contracts/diamond/interfaces/IDiamond.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut": {
        "src": "contracts/diamond/interfaces/IDiamondCut.sol:11",
        "inherit": [
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe": {
        "src": "contracts/diamond/interfaces/IDiamondLoupe.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/interfaces/IERC165.sol:IERC165": {
        "src": "contracts/diamond/interfaces/IERC165.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/interfaces/IERC173.sol:IERC173": {
        "src": "contracts/diamond/interfaces/IERC173.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/libraries/LibDiamond.sol:LibDiamond": {
        "src": "contracts/diamond/libraries/LibDiamond.sol:30",
        "version": {
          "withMetadata": "789e83fcb097ae27d44ff28449d2d1d0569228f4799c662aa23c081163338ccd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/libraries/SharedStorage.sol:SharedStorage": {
        "src": "contracts/diamond/libraries/SharedStorage.sol:4",
        "version": {
          "withMetadata": "a29fb52f1ca7fdab96c105c4e31d8f945c23d3e7affba63390e1d71287464ab3",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondInit.sol:25",
        "version": {
          "withMetadata": "5f85f02bb90aed573411425eb504592f51ecdddaa063f7d5eba993b7e871864b",
          "withoutMetadata": "6e64383eb741f6afc3581336bddcdb77cd7e944fae1101df694ef68d7846d223",
          "linkedWithoutMetadata": "6e64383eb741f6afc3581336bddcdb77cd7e944fae1101df694ef68d7846d223"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "init()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:DiamondMultiInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:15",
        "version": {
          "withMetadata": "25bb3eab6bb1aa8093d4a45da39d1c3c8a8426b82a94a4d1df2da038fbbd4240",
          "withoutMetadata": "8e2b988bb9e7853a08fe88fe2bbfac2fcce80594e4d286125715c8bd88da410d",
          "linkedWithoutMetadata": "8e2b988bb9e7853a08fe88fe2bbfac2fcce80594e4d286125715c8bd88da410d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "multiInit(address[],bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Base.sol:Base": {
        "src": "contracts/libraries/Base.sol:4",
        "version": {
          "withMetadata": "1671aee69d78b1225627438995208c11816d913c55cccf3aacbd3548d349614a",
          "withoutMetadata": "e778efdb95690c2160d6adf7f5e2f89aafd192c8c2f6ee94c66c59ee334fba41",
          "linkedWithoutMetadata": "e778efdb95690c2160d6adf7f5e2f89aafd192c8c2f6ee94c66c59ee334fba41"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts/libraries/Base.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Guardians.sol:Guardians": {
        "src": "contracts/libraries/Guardians.sol:13",
        "version": {
          "withMetadata": "dcdf9f9c5e1ab5f63b297433b37db34c3f691bb6ea3f47b39603a00ab7501589",
          "withoutMetadata": "bf7c487eb796047d3cf69966082589ac1762cdb83d8fa409490cc30b6851e3a3",
          "linkedWithoutMetadata": "bf7c487eb796047d3cf69966082589ac1762cdb83d8fa409490cc30b6851e3a3"
        },
        "inherit": [
          "contracts/libraries/Base.sol:Base"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "lockAccount()",
          "unlockAccount()",
          "changeSigner(address)",
          "addGuardians(address[])",
          "cancelGuardianAddition()",
          "executeGuardianRemoval(address[])",
          "cancelGuardianRemoval()",
          "removeGuardianExplicitly(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Guardians",
            "src": "contracts/libraries/Guardians.sol:92"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ONE_DAY",
            "src": "contracts/libraries/Guardians.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isLocked",
            "src": "contracts/libraries/Guardians.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "guardiansCount",
            "src": "contracts/libraries/Guardians.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRegistry)14839",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:15"
            },
            {
              "label": "ONE_DAY",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:17"
            },
            {
              "label": "isLocked",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:26"
            },
            {
              "label": "guardiansCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:29"
            },
            {
              "label": "guardiansList",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:32"
            },
            {
              "label": "guardianAdditionTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:35"
            },
            {
              "label": "guardianRemovalTimestamp",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:36"
            },
            {
              "label": "guardianAdditionCancellationTimestamp",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:37"
            },
            {
              "label": "guardianRemovalCancellationTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:38"
            },
            {
              "label": "guardiansSignerChoice",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:41"
            },
            {
              "label": "guardiansUnlockAgreementCount",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:44"
            },
            {
              "label": "isGuardian",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:47"
            },
            {
              "label": "explicitRemovalVote",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:50"
            },
            {
              "label": "guardiansUnlockVote",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)14839": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Guardians.sol:IRegistry": {
        "src": "contracts/libraries/Guardians.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addGuardians(address[])",
          "removeGuardians(address[])",
          "changeOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SpendLimit.sol:SpendLimit": {
        "src": "contracts/libraries/SpendLimit.sol:5",
        "version": {
          "withMetadata": "44866f1392e8b407ae2c6b16fa41ab333fcfb2257dfdde6e5fda1bb0af146e75",
          "withoutMetadata": "0d38da0358070a653be74443fe616559c0f503a6a6277f1996504cba85ab3a0a",
          "linkedWithoutMetadata": "0d38da0358070a653be74443fe616559c0f503a6a6277f1996504cba85ab3a0a"
        },
        "inherit": [
          "contracts/libraries/Base.sol:Base"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setSpendingLimit(address,uint256)",
          "removeSpendingLimit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "ONE_DAY",
            "src": "contracts/libraries/SpendLimit.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            },
            {
              "label": "ONE_DAY",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SpendLimit",
              "src": "contracts/libraries/SpendLimit.sol:7"
            },
            {
              "label": "limits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(Limit)15854_storage)",
              "contract": "SpendLimit",
              "src": "contracts/libraries/SpendLimit.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Limit)15854_storage)": {
              "label": "mapping(address => struct SpendLimit.Limit)",
              "numberOfBytes": "32"
            },
            "t_struct(Limit)15854_storage": {
              "label": "struct SpendLimit.Limit",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "available",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "resetTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "e32a4226deb5e313ad43eb938c9cc8669aff8ad08b5dd3c34bb3c7cee3fadf08",
          "withoutMetadata": "5930c7b66248f13ce2fcafc29663341558b970c1976823f1d5c73417068ee9b2",
          "linkedWithoutMetadata": "5930c7b66248f13ce2fcafc29663341558b970c1976823f1d5c73417068ee9b2"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "ef0d7495307037a630ba9977df7b4ba2f39eeb0e4185b681085b451cca429ad0",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:23",
        "version": {
          "withMetadata": "89e76289da4ccfcb139019468eeb0dd4b2a3e907e5a6aeee428434fa59c06fab",
          "withoutMetadata": "110dc509d49f8c5da4d0f48c539344b23141edd5b43dd42129402a2d87a101ed",
          "linkedWithoutMetadata": "110dc509d49f8c5da4d0f48c539344b23141edd5b43dd42129402a2d87a101ed"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:39"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_beacon",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:25"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "a482cbd7c978f9fcbcb086f357038898c37bb2a3ec403572042828e7a743d852",
          "withoutMetadata": "512b90ef99d5c7dde65520d87b1e248ecf42737a3816da9373e3e8df5c011f95",
          "linkedWithoutMetadata": "512b90ef99d5c7dde65520d87b1e248ecf42737a3816da9373e3e8df5c011f95"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "2c62574952e8ec52de29041fc13a375c6406c56b66edc6627b41be6c781d1baf",
          "withoutMetadata": "25050b45f14496c71568cb94ea4d9137edfa80cb63bdf0e8bc7062eeb76e0807",
          "linkedWithoutMetadata": "25050b45f14496c71568cb94ea4d9137edfa80cb63bdf0e8bc7062eeb76e0807"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyAdmin",
            "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:17",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:60",
        "version": {
          "withMetadata": "c8ed57c808509abffa101bbb5863bc764c32ab6d83a1f825e23ca375867cd822",
          "withoutMetadata": "2cd8852f7d47538ff09d48b3d94546e6163db89c058b71fb87b58027e07fe4d4",
          "linkedWithoutMetadata": "2cd8852f7d47538ff09d48b3d94546e6163db89c058b71fb87b58027e07fe4d4"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:77"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_admin",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:65"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "32609b99522a7aeb1dc758b8c97281e84e84073a5477fcf2a0fccccc80b97d68",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "3ec8b4ea473c21a4156fada8b2569be8a683bfb026bf6b6cb84633efdcbdba0d",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "08b6dbfd1a4609566a43587c156b7743213d08cf86a28ceb2b2272aaa535120d",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "140d4cf5aab6c2424d5abbd43252fd842d7fbfcfd3f9d02d13d814e937a5f6f7",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "f91d69535dfc5412cd102eb494b9f13109dbc8a7a212652a30d1ce9a53d1ead8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f2edf95af32f589e482e33ea4297695a1adb54ebe2cab7a7bf610c5a51039f8b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "14c504fa2ebfea697071883aacb4af83bf4d7bf66db91eb8dc7e1104e8bb087f",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC20Template.sol:ERC20Template": {
        "src": "contracts/ERC20Template.sol:6",
        "version": {
          "withMetadata": "d23853bc247ee246445846485a4fed4c0c38349d5026ba91ddf75cc8b5543318",
          "withoutMetadata": "d1006d01ae1932a13c3881b2fe6842e7a6f90a05cac564a0dd373ce1c91cefa0",
          "linkedWithoutMetadata": "d1006d01ae1932a13c3881b2fe6842e7a6f90a05cac564a0dd373ce1c91cefa0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "adminMint(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Template",
            "src": "contracts/ERC20Template.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "ERC20Template",
              "src": "contracts/ERC20Template.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721A.sol:ERC721A": {
        "src": "contracts/ERC721A.sol:39",
        "version": {
          "withMetadata": "1a9f2b3c43325bdf2707171d1a27c9f01aa2e18edd8ec4b275216f70a363680d",
          "withoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5",
          "linkedWithoutMetadata": "da7b8afbb4393e7024fb00d47d9f63fbfa392b4fb6c60b660f34c8ce9d698bd5"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "contracts/ERC721A.sol:147"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721AStoreFront.sol:ERC721AStoreFront": {
        "src": "contracts/ERC721AStoreFront.sol:39",
        "version": {
          "withMetadata": "6b773093fd7171faf0f2ea2a3396cd2d041b9aaab7b0c3dfba483cac6f0dae90",
          "withoutMetadata": "96ed5076d1b68bf6407b13a9990d465ac72356bd29bdd552de1446f02ab31bb6",
          "linkedWithoutMetadata": "96ed5076d1b68bf6407b13a9990d465ac72356bd29bdd552de1446f02ab31bb6"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721AStoreFront",
            "src": "contracts/ERC721AStoreFront.sol:152"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:103"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:106"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:109"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:112"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:124"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:133"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:136"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:139"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:142"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:146"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)": {
              "label": "mapping(uint256 => struct ERC721AStoreFront.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)6857_storage": {
              "label": "struct ERC721AStoreFront.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721AStoreFront.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721AStoreFront.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721Merkle.sol:ERC721Merkle": {
        "src": "contracts/ERC721Merkle.sol:8",
        "version": {
          "withMetadata": "e1917c33944e9acff9bc64b4449515f2e64d4e9574af0b60a1c652fecfba93a2",
          "withoutMetadata": "27670acd8955a9eb8a93f841baa461a439facc60dd701e5eec19f7ad21351b21",
          "linkedWithoutMetadata": "27670acd8955a9eb8a93f841baa461a439facc60dd701e5eec19f7ad21351b21"
        },
        "inherit": [
          "contracts/ERC721Template.sol:ERC721Template",
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "setTier(uint256,string,bytes32,uint256,uint256,uint256)",
          "enableTier(uint256)",
          "getTierIds()",
          "getMintEligibility(uint256,address,bytes32[])",
          "disableTier(uint256)",
          "setTierSaleStartTime(uint256,uint256)",
          "setTierPrice(uint256,uint256)",
          "setTierMaxMintAmount(uint256,uint256)",
          "setTierMerkleRoot(uint256,bytes32)",
          "getTierDetails(uint256)",
          "whitelistMint(uint256,uint256,bytes32[])",
          "whitelistMintWithERC20ChainlinkPrice(uint256,uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Merkle",
            "src": "contracts/ERC721Merkle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            },
            {
              "label": "tiers",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_uint256,t_struct(Tier)9010_storage)",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:17"
            },
            {
              "label": "tierIds",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Tier)9010_storage)": {
              "label": "mapping(uint256 => struct ERC721Merkle.Tier)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Tier)9010_storage": {
              "label": "struct ERC721Merkle.Tier",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maxMintAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "saleStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "mints",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721Template.sol:ERC721Template": {
        "src": "contracts/ERC721Template.sol:10",
        "version": {
          "withMetadata": "daf3ec2265aee6c86512496d7dd2a5bd1f58b6b8015bb0f2dcf39498df03febc",
          "withoutMetadata": "e1c22d05c1e4681b0bbb0c8bdd67ddb8d3589b5ba772af70fcc91295148827fa",
          "linkedWithoutMetadata": "e1c22d05c1e4681b0bbb0c8bdd67ddb8d3589b5ba772af70fcc91295148827fa"
        },
        "inherit": [
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "tokenURI(uint256)",
          "getPublicMintEligibility()",
          "getLaunchpadDetails()",
          "getLaunchpadDetailsERC20()",
          "mint(uint256)",
          "getRequiredERC20TokensChainlink(uint256)",
          "mintWithERC20ChainlinkPrice(uint256)",
          "mintWithFixedERC20Price(uint256)",
          "adminMint(address,uint256)",
          "batchAdminMint(address[],uint256[])",
          "setPublicPrice(uint256)",
          "setBaseURI(string)",
          "setNotRevealedURI(string)",
          "setMaxSupply(uint256)",
          "togglePublicSaleActive()",
          "setPublicSaleStartTime(uint256)",
          "setPublicMaxMintAmount(uint256)",
          "toggleReveal()",
          "setDefaultRoyaltyInfo(address payable,uint256)",
          "setTokenRoyaltyInfo(uint256,address payable,uint256)",
          "setContractURI(string)",
          "setERC20TokenAddress(address)",
          "setErc20FixedPricePerToken(uint256)",
          "setERC20PriceFeedAddress(address)",
          "setETHPriceFeedAddress(address)",
          "setERC20DiscountIn10000(uint256)",
          "royaltyInfo(uint256,uint256)",
          "withdrawFixedComission()",
          "withdraw()",
          "withdrawERC20(address)",
          "setTradingEnabled(bool)",
          "addToBlacklist(address)",
          "removeFromBlacklist(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Template",
            "src": "contracts/ERC721Template.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "publicSaleStartTime",
            "src": "contracts/ERC721Template.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalComissionWithdrawn",
            "src": "contracts/ERC721Template.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tradingEnabled",
            "src": "contracts/ERC721Template.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/IERC721A.sol:IERC721A": {
        "src": "contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/Storefront.sol:Storefront": {
        "src": "contracts/Storefront.sol:7",
        "version": {
          "withMetadata": "13c1405775ee97dd2b7d351f65ebafaa79d7b01870e84147ab0c23f4536165ca",
          "withoutMetadata": "cfb0d2313deed2f89559ee52a7f7c2a34f852b9e9e3a50f5a4dc0e1d822836c7",
          "linkedWithoutMetadata": "cfb0d2313deed2f89559ee52a7f7c2a34f852b9e9e3a50f5a4dc0e1d822836c7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERC721AStoreFront.sol:ERC721AStoreFront",
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,string)",
          "mint(string)",
          "setMintPrice(uint256)",
          "setContractURI(string)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Storefront",
            "src": "contracts/Storefront.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:103"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:106"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:109"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:112"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:124"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:133"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:136"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:139"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:142"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:146"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mintPrice",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Storefront",
              "src": "contracts/Storefront.sol:8"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "Storefront",
              "src": "contracts/Storefront.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)": {
              "label": "mapping(uint256 => struct ERC721AStoreFront.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)6857_storage": {
              "label": "struct ERC721AStoreFront.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/Diamond.sol:Diamond": {
        "src": "contracts/diamond/Diamond.sol:35",
        "version": {
          "withMetadata": "365c20a86b699d2aee9392ffb5f893169f6d5a08ed4aa591469e6ec14d4c2ec6",
          "withoutMetadata": "365c20a86b699d2aee9392ffb5f893169f6d5a08ed4aa591469e6ec14d4c2ec6",
          "linkedWithoutMetadata": "365c20a86b699d2aee9392ffb5f893169f6d5a08ed4aa591469e6ec14d4c2ec6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(struct IDiamond.FacetCut[],(address,address,bytes,address,address,uint256,uint256))",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Diamond",
            "src": "contracts/diamond/Diamond.sol:37"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/DiamondCutFacet.sol:DiamondCutFacet": {
        "src": "contracts/diamond/facets/DiamondCutFacet.sol:15",
        "version": {
          "withMetadata": "e4f1948ebd1f1f04df8ab7b23b982b34840cf8de584d63940540ac0c4c1871da",
          "withoutMetadata": "b61fc5c92d6ec1236563ab23889eb36fa22349b79290a2a929a98b9eb0166a37",
          "linkedWithoutMetadata": "b61fc5c92d6ec1236563ab23889eb36fa22349b79290a2a929a98b9eb0166a37"
        },
        "inherit": [
          "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut",
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet": {
        "src": "contracts/diamond/facets/DiamondLoupeFacet.sol:15",
        "version": {
          "withMetadata": "16077d8d7dff40185697ffaedd7947c542a5bd2f27681fe163ff878943930a5b",
          "withoutMetadata": "2e34e32c5323191e2dec5f8292c73c91a47c0b5f4409bcd26cd7b922c548fed2",
          "linkedWithoutMetadata": "2e34e32c5323191e2dec5f8292c73c91a47c0b5f4409bcd26cd7b922c548fed2"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC165.sol:IERC165",
          "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe"
        ],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/OwnershipFacet.sol:OwnershipFacet": {
        "src": "contracts/diamond/facets/OwnershipFacet.sol:7",
        "version": {
          "withMetadata": "de663015e191757d6f93aaa931d660f8182f4384e8beb4a6e6f72140c589c71c",
          "withoutMetadata": "07441ca3fe8dd7dde3307d106047c923e6472309e13ed5f0f7f88d06fd02e2cb",
          "linkedWithoutMetadata": "07441ca3fe8dd7dde3307d106047c923e6472309e13ed5f0f7f88d06fd02e2cb"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC173.sol:IERC173"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/ManagementFacet.sol:IERC20": {
        "src": "contracts/diamond/facets/custom/ManagementFacet.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/ManagementFacet.sol:ManagementFacet": {
        "src": "contracts/diamond/facets/custom/ManagementFacet.sol:11",
        "version": {
          "withMetadata": "409f6e95ea95b52d028e90a26ae8fecb525c8384e8d19b161ee332e2e600b7a2",
          "withoutMetadata": "8b0bfc257687b7ee44ee9924e4d317e8a915b47622815052b255a9449f8b0a08",
          "linkedWithoutMetadata": "8b0bfc257687b7ee44ee9924e4d317e8a915b47622815052b255a9449f8b0a08"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPlatformFee(uint256)",
          "setPremiumDiscount(uint256)",
          "setWETHAddress(address)",
          "setPremiumNftAddress(address)",
          "getPremiumNftAddress()",
          "setMarketplacePaused(bool)",
          "withdrawETH()",
          "withdrawERC20(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:IERC20": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:IERC2981": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:Ownable": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:TransactFacet": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:25",
        "version": {
          "withMetadata": "65ea0300696f58132f49d39472a334967c1867b92bf28c0f8bbaccd0e3b7904c",
          "withoutMetadata": "05fdc48e3c44ba38eee0c17bd9595e47e9848e37941ce49d0dd021553775400b",
          "linkedWithoutMetadata": "05fdc48e3c44ba38eee0c17bd9595e47e9848e37941ce49d0dd021553775400b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "createOrderHash((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256))",
          "getDomainSeparator()",
          "domain()",
          "cancelOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes))",
          "cancelAllOrders()",
          "validateOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),bytes32)",
          "acceptOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),uint256)",
          "batchAcceptOrder(struct TransactFacet.Order[],uint256[])",
          "acceptCollectionOffer(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),uint256,uint256)",
          "isPremiumHolder(address)",
          "verifySignature(bytes32,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IDiamond.sol:IDiamond": {
        "src": "contracts/diamond/interfaces/IDiamond.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut": {
        "src": "contracts/diamond/interfaces/IDiamondCut.sol:11",
        "inherit": [
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe": {
        "src": "contracts/diamond/interfaces/IDiamondLoupe.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IERC165.sol:IERC165": {
        "src": "contracts/diamond/interfaces/IERC165.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IERC173.sol:IERC173": {
        "src": "contracts/diamond/interfaces/IERC173.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/libraries/LibDiamond.sol:LibDiamond": {
        "src": "contracts/diamond/libraries/LibDiamond.sol:30",
        "version": {
          "withMetadata": "52e5e04e32915a198b1ce74e0343523adef2f7f30f331b2040fee0706e80d91e",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/libraries/SharedStorage.sol:SharedStorage": {
        "src": "contracts/diamond/libraries/SharedStorage.sol:4",
        "version": {
          "withMetadata": "a0a789a94a828bcd7a82738b052bb02ba5f013d68211b01244bdbf03a758bc68",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondInit.sol:25",
        "version": {
          "withMetadata": "7003777d6326a92a1a82c8e33541d3e89b6c65eba954186ae8f05075fcd70732",
          "withoutMetadata": "6e64383eb741f6afc3581336bddcdb77cd7e944fae1101df694ef68d7846d223",
          "linkedWithoutMetadata": "6e64383eb741f6afc3581336bddcdb77cd7e944fae1101df694ef68d7846d223"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "init()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:DiamondMultiInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:15",
        "version": {
          "withMetadata": "2facdc9b394efbd776e7e2f1ca16cd8d4d94041159aba0f6e1e9f0c496c2a95a",
          "withoutMetadata": "8e2b988bb9e7853a08fe88fe2bbfac2fcce80594e4d286125715c8bd88da410d",
          "linkedWithoutMetadata": "8e2b988bb9e7853a08fe88fe2bbfac2fcce80594e4d286125715c8bd88da410d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "multiInit(address[],bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/Base.sol:Base": {
        "src": "contracts/libraries/Base.sol:4",
        "version": {
          "withMetadata": "7f96b8f17bc701be2292db59a9e68c54771def8cf202aa9d7af38067ad1b7dbc",
          "withoutMetadata": "e778efdb95690c2160d6adf7f5e2f89aafd192c8c2f6ee94c66c59ee334fba41",
          "linkedWithoutMetadata": "e778efdb95690c2160d6adf7f5e2f89aafd192c8c2f6ee94c66c59ee334fba41"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts/libraries/Base.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/Guardians.sol:Guardians": {
        "src": "contracts/libraries/Guardians.sol:13",
        "version": {
          "withMetadata": "6bb1325ced3e1a1f2eecdfcdafe0976e41ddb360a379650b6a8187cd8a54558f",
          "withoutMetadata": "bf7c487eb796047d3cf69966082589ac1762cdb83d8fa409490cc30b6851e3a3",
          "linkedWithoutMetadata": "bf7c487eb796047d3cf69966082589ac1762cdb83d8fa409490cc30b6851e3a3"
        },
        "inherit": [
          "contracts/libraries/Base.sol:Base"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "lockAccount()",
          "unlockAccount()",
          "changeSigner(address)",
          "addGuardians(address[])",
          "cancelGuardianAddition()",
          "executeGuardianRemoval(address[])",
          "cancelGuardianRemoval()",
          "removeGuardianExplicitly(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Guardians",
            "src": "contracts/libraries/Guardians.sol:92"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ONE_DAY",
            "src": "contracts/libraries/Guardians.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isLocked",
            "src": "contracts/libraries/Guardians.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "guardiansCount",
            "src": "contracts/libraries/Guardians.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRegistry)14839",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:15"
            },
            {
              "label": "ONE_DAY",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:17"
            },
            {
              "label": "isLocked",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:26"
            },
            {
              "label": "guardiansCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:29"
            },
            {
              "label": "guardiansList",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:32"
            },
            {
              "label": "guardianAdditionTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:35"
            },
            {
              "label": "guardianRemovalTimestamp",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:36"
            },
            {
              "label": "guardianAdditionCancellationTimestamp",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:37"
            },
            {
              "label": "guardianRemovalCancellationTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:38"
            },
            {
              "label": "guardiansSignerChoice",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:41"
            },
            {
              "label": "guardiansUnlockAgreementCount",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:44"
            },
            {
              "label": "isGuardian",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:47"
            },
            {
              "label": "explicitRemovalVote",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:50"
            },
            {
              "label": "guardiansUnlockVote",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)14839": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/Guardians.sol:IRegistry": {
        "src": "contracts/libraries/Guardians.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addGuardians(address[])",
          "removeGuardians(address[])",
          "changeOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/SpendLimit.sol:SpendLimit": {
        "src": "contracts/libraries/SpendLimit.sol:5",
        "version": {
          "withMetadata": "4a69fcb2e3671bd2fc14d132f3c1687b2ebccd66641d232445ab029c4507ba0f",
          "withoutMetadata": "0d38da0358070a653be74443fe616559c0f503a6a6277f1996504cba85ab3a0a",
          "linkedWithoutMetadata": "0d38da0358070a653be74443fe616559c0f503a6a6277f1996504cba85ab3a0a"
        },
        "inherit": [
          "contracts/libraries/Base.sol:Base"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setSpendingLimit(address,uint256)",
          "removeSpendingLimit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "ONE_DAY",
            "src": "contracts/libraries/SpendLimit.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            },
            {
              "label": "ONE_DAY",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SpendLimit",
              "src": "contracts/libraries/SpendLimit.sol:7"
            },
            {
              "label": "limits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(Limit)15854_storage)",
              "contract": "SpendLimit",
              "src": "contracts/libraries/SpendLimit.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Limit)15854_storage)": {
              "label": "mapping(address => struct SpendLimit.Limit)",
              "numberOfBytes": "32"
            },
            "t_struct(Limit)15854_storage": {
              "label": "struct SpendLimit.Limit",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "available",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "resetTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    }
  ]
}