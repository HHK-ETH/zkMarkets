{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "@openzeppelin/contracts/interfaces/IERC1271.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "d8beec8eab49a00bbc240985417d4f2cad37934e902a3277054a76604ca6c3d8",
          "withoutMetadata": "d8beec8eab49a00bbc240985417d4f2cad37934e902a3277054a76604ca6c3d8",
          "linkedWithoutMetadata": "d8beec8eab49a00bbc240985417d4f2cad37934e902a3277054a76604ca6c3d8"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "bf18da91e68b8a896079f47bcffd256a64b4be61a0535320dd9676a16b9c9190",
          "withoutMetadata": "bf18da91e68b8a896079f47bcffd256a64b4be61a0535320dd9676a16b9c9190",
          "linkedWithoutMetadata": "bf18da91e68b8a896079f47bcffd256a64b4be61a0535320dd9676a16b9c9190"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:23",
        "version": {
          "withMetadata": "7acd592fc4f4e2aa59c5fb02fd123025284764b318c4a69212d7c4a9fafa00ff",
          "withoutMetadata": "7acd592fc4f4e2aa59c5fb02fd123025284764b318c4a69212d7c4a9fafa00ff",
          "linkedWithoutMetadata": "7acd592fc4f4e2aa59c5fb02fd123025284764b318c4a69212d7c4a9fafa00ff"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:39"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_beacon",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:25"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "2f9274448e214a421298bdff8d6f01474386ea26d138805e317063059c6d1a6e",
          "withoutMetadata": "2f9274448e214a421298bdff8d6f01474386ea26d138805e317063059c6d1a6e",
          "linkedWithoutMetadata": "2f9274448e214a421298bdff8d6f01474386ea26d138805e317063059c6d1a6e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "0833882ca356b39b72e924a0fb1a6e5382a54d0275b98fd4a3c1609d5d9c82ac",
          "withoutMetadata": "0833882ca356b39b72e924a0fb1a6e5382a54d0275b98fd4a3c1609d5d9c82ac",
          "linkedWithoutMetadata": "0833882ca356b39b72e924a0fb1a6e5382a54d0275b98fd4a3c1609d5d9c82ac"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyAdmin",
            "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:17",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:60",
        "version": {
          "withMetadata": "bf22ede2584e7ca131c24919dd0e66856b0c0992b1fde3122ab7049845be8a10",
          "withoutMetadata": "bf22ede2584e7ca131c24919dd0e66856b0c0992b1fde3122ab7049845be8a10",
          "linkedWithoutMetadata": "bf22ede2584e7ca131c24919dd0e66856b0c0992b1fde3122ab7049845be8a10"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:77"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_admin",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:65"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "0583c8d4643975e2374d97921dcade474117dd269084aa769210a9df1a5abbbd",
          "withoutMetadata": "0583c8d4643975e2374d97921dcade474117dd269084aa769210a9df1a5abbbd",
          "linkedWithoutMetadata": "0583c8d4643975e2374d97921dcade474117dd269084aa769210a9df1a5abbbd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "f2b14ada12242d9670f014704d4a731bad19c4a0e8c622b85ac083d306c9d85e",
          "withoutMetadata": "f2b14ada12242d9670f014704d4a731bad19c4a0e8c622b85ac083d306c9d85e",
          "linkedWithoutMetadata": "f2b14ada12242d9670f014704d4a731bad19c4a0e8c622b85ac083d306c9d85e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "8c468f7905c745369f3ef82129164ab67a3dfdd294dbc0d460e5c5d6c671c311",
          "withoutMetadata": "8c468f7905c745369f3ef82129164ab67a3dfdd294dbc0d460e5c5d6c671c311",
          "linkedWithoutMetadata": "8c468f7905c745369f3ef82129164ab67a3dfdd294dbc0d460e5c5d6c671c311"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "fcd87e046920dabdac370e91edaf411d1d665678284a89a78c11bd18d21ce951",
          "withoutMetadata": "fcd87e046920dabdac370e91edaf411d1d665678284a89a78c11bd18d21ce951",
          "linkedWithoutMetadata": "fcd87e046920dabdac370e91edaf411d1d665678284a89a78c11bd18d21ce951"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "ad730036e10148793eb9ac972df95b837e3ae51b6bc13d69beb03a605abf5e16",
          "withoutMetadata": "ad730036e10148793eb9ac972df95b837e3ae51b6bc13d69beb03a605abf5e16",
          "linkedWithoutMetadata": "ad730036e10148793eb9ac972df95b837e3ae51b6bc13d69beb03a605abf5e16"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "45fa2735241ee8f3e5eff0fae79baaeb689094185b144a04867397342142ebe4",
          "withoutMetadata": "45fa2735241ee8f3e5eff0fae79baaeb689094185b144a04867397342142ebe4",
          "linkedWithoutMetadata": "45fa2735241ee8f3e5eff0fae79baaeb689094185b144a04867397342142ebe4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "7e535e3d2ea85f13f21a84bac1598fadfb2aef4ffc611ef65279abbba4a92ebe",
          "withoutMetadata": "7e535e3d2ea85f13f21a84bac1598fadfb2aef4ffc611ef65279abbba4a92ebe",
          "linkedWithoutMetadata": "7e535e3d2ea85f13f21a84bac1598fadfb2aef4ffc611ef65279abbba4a92ebe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC20Template.sol:ERC20Template": {
        "src": "contracts/ERC20Template.sol:6",
        "version": {
          "withMetadata": "48aae3eba080b0fe1adf94512da207bc4ac3ca1522f3af34d7f11636047129c1",
          "withoutMetadata": "48aae3eba080b0fe1adf94512da207bc4ac3ca1522f3af34d7f11636047129c1",
          "linkedWithoutMetadata": "48aae3eba080b0fe1adf94512da207bc4ac3ca1522f3af34d7f11636047129c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "adminMint(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Template",
            "src": "contracts/ERC20Template.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "ERC20Template",
              "src": "contracts/ERC20Template.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721A.sol:ERC721A": {
        "src": "contracts/ERC721A.sol:39",
        "version": {
          "withMetadata": "0a62d84e48affdfc6a80d1487e0e4d269fd68328457d7bc7d7514abe57fa1356",
          "withoutMetadata": "0a62d84e48affdfc6a80d1487e0e4d269fd68328457d7bc7d7514abe57fa1356",
          "linkedWithoutMetadata": "0a62d84e48affdfc6a80d1487e0e4d269fd68328457d7bc7d7514abe57fa1356"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "contracts/ERC721A.sol:147"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721AStoreFront.sol:ERC721AStoreFront": {
        "src": "contracts/ERC721AStoreFront.sol:39",
        "version": {
          "withMetadata": "e91d1f17ca64883de46ca3e32bc7c4e53d560950de513792d79f39a71e153651",
          "withoutMetadata": "e91d1f17ca64883de46ca3e32bc7c4e53d560950de513792d79f39a71e153651",
          "linkedWithoutMetadata": "e91d1f17ca64883de46ca3e32bc7c4e53d560950de513792d79f39a71e153651"
        },
        "inherit": [
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721AStoreFront",
            "src": "contracts/ERC721AStoreFront.sol:152"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:103"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:106"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:109"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:112"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:124"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:133"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:136"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:139"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:142"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:146"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)": {
              "label": "mapping(uint256 => struct ERC721AStoreFront.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)6857_storage": {
              "label": "struct ERC721AStoreFront.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721AStoreFront.sol:ERC721A__IERC721Receiver": {
        "src": "contracts/ERC721AStoreFront.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721Merkle.sol:ERC721Merkle": {
        "src": "contracts/ERC721Merkle.sol:8",
        "version": {
          "withMetadata": "cdb49fa3afed77e9dcf0e43b3a1bd61f88cbfff098478ca2c2c5ad9b9ff71b09",
          "withoutMetadata": "cdb49fa3afed77e9dcf0e43b3a1bd61f88cbfff098478ca2c2c5ad9b9ff71b09",
          "linkedWithoutMetadata": "cdb49fa3afed77e9dcf0e43b3a1bd61f88cbfff098478ca2c2c5ad9b9ff71b09"
        },
        "inherit": [
          "contracts/ERC721Template.sol:ERC721Template",
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "setTier(uint256,string,bytes32,uint256,uint256,uint256)",
          "enableTier(uint256)",
          "getTierIds()",
          "getMintEligibility(uint256,address,bytes32[])",
          "disableTier(uint256)",
          "setTierSaleStartTime(uint256,uint256)",
          "setTierPrice(uint256,uint256)",
          "setTierMaxMintAmount(uint256,uint256)",
          "setTierMerkleRoot(uint256,bytes32)",
          "getTierDetails(uint256)",
          "whitelistMint(uint256,uint256,bytes32[])",
          "whitelistMintWithERC20ChainlinkPrice(uint256,uint256,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Merkle",
            "src": "contracts/ERC721Merkle.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            },
            {
              "label": "tiers",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_uint256,t_struct(Tier)9010_storage)",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:17"
            },
            {
              "label": "tierIds",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Merkle",
              "src": "contracts/ERC721Merkle.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Tier)9010_storage)": {
              "label": "mapping(uint256 => struct ERC721Merkle.Tier)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Tier)9010_storage": {
              "label": "struct ERC721Merkle.Tier",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maxMintAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "saleStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "mints",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/ERC721Template.sol:ERC721Template": {
        "src": "contracts/ERC721Template.sol:10",
        "version": {
          "withMetadata": "ff87d84b2cdda1979e13691c2c0dcbdaa939ce62b4e7c74ffb38cb84ab6c3d51",
          "withoutMetadata": "ff87d84b2cdda1979e13691c2c0dcbdaa939ce62b4e7c74ffb38cb84ab6c3d51",
          "linkedWithoutMetadata": "ff87d84b2cdda1979e13691c2c0dcbdaa939ce62b4e7c74ffb38cb84ab6c3d51"
        },
        "inherit": [
          "contracts/ERC721A.sol:ERC721A",
          "contracts/IERC721A.sol:IERC721A",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,uint256,uint256,string,string,address payable,address payable,uint256,uint256,address payable,uint256)",
          "tokenURI(uint256)",
          "getPublicMintEligibility()",
          "getLaunchpadDetails()",
          "getLaunchpadDetailsERC20()",
          "mint(uint256)",
          "getRequiredERC20TokensChainlink(uint256)",
          "mintWithERC20ChainlinkPrice(uint256)",
          "mintWithFixedERC20Price(uint256)",
          "adminMint(address,uint256)",
          "batchAdminMint(address[],uint256[])",
          "setPublicPrice(uint256)",
          "setBaseURI(string)",
          "setNotRevealedURI(string)",
          "setMaxSupply(uint256)",
          "togglePublicSaleActive()",
          "setPublicSaleStartTime(uint256)",
          "setPublicMaxMintAmount(uint256)",
          "toggleReveal()",
          "setDefaultRoyaltyInfo(address payable,uint256)",
          "setTokenRoyaltyInfo(uint256,address payable,uint256)",
          "setContractURI(string)",
          "setERC20TokenAddress(address)",
          "setErc20FixedPricePerToken(uint256)",
          "setERC20PriceFeedAddress(address)",
          "setETHPriceFeedAddress(address)",
          "setERC20DiscountIn10000(uint256)",
          "royaltyInfo(uint256,uint256)",
          "withdrawFixedComission()",
          "withdraw()",
          "withdrawERC20(address)",
          "setTradingEnabled(bool)",
          "addToBlacklist(address)",
          "removeFromBlacklist(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Template",
            "src": "contracts/ERC721Template.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "publicSaleStartTime",
            "src": "contracts/ERC721Template.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalComissionWithdrawn",
            "src": "contracts/ERC721Template.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tradingEnabled",
            "src": "contracts/ERC721Template.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:101"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:104"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:107"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:110"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:122"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:131"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:134"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:137"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "contracts/ERC721A.sol:141"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:13"
            },
            {
              "label": "notRevealedURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:14"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:15"
            },
            {
              "label": "publicPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:16"
            },
            {
              "label": "publicMaxMintAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:17"
            },
            {
              "label": "publicSaleStartTime",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:18"
            },
            {
              "label": "isRevealed",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:19"
            },
            {
              "label": "withdrawalRecipientAddress",
              "offset": 1,
              "slot": "16",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:20"
            },
            {
              "label": "comissionRecipientAddress",
              "offset": 0,
              "slot": "17",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:22"
            },
            {
              "label": "comissionPercentageIn10000",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:23"
            },
            {
              "label": "totalComissionWithdrawn",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:24"
            },
            {
              "label": "fixedCommissionTreshold",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:25"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:27"
            },
            {
              "label": "defaultRoyaltyRecipient",
              "offset": 0,
              "slot": "22",
              "type": "t_address_payable",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:31"
            },
            {
              "label": "defaultRoyaltyPercentageIn10000",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:32"
            },
            {
              "label": "ERC20TokenAddress",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:35"
            },
            {
              "label": "ERC20FixedPricePerToken",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:36"
            },
            {
              "label": "ERC20DiscountIn10000",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:37"
            },
            {
              "label": "ERC20PriceFeedAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:39"
            },
            {
              "label": "ethPriceFeedAddress",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:40"
            },
            {
              "label": "tokenRoyaltyRecipient",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:43"
            },
            {
              "label": "tokenRoyaltyPercentage",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:44"
            },
            {
              "label": "tradingEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:47"
            },
            {
              "label": "blacklist",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC721Template",
              "src": "contracts/ERC721Template.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)4757_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)4757_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/IERC721A.sol:IERC721A": {
        "src": "contracts/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/Storefront.sol:Storefront": {
        "src": "contracts/Storefront.sol:7",
        "version": {
          "withMetadata": "639d2210f633e6445375441ea45006bb5adc0488085bdb730934845593559afc",
          "withoutMetadata": "639d2210f633e6445375441ea45006bb5adc0488085bdb730934845593559afc",
          "linkedWithoutMetadata": "639d2210f633e6445375441ea45006bb5adc0488085bdb730934845593559afc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/ERC721AStoreFront.sol:ERC721AStoreFront",
          "contracts/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,string)",
          "mint(string)",
          "setMintPrice(uint256)",
          "setContractURI(string)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Storefront",
            "src": "contracts/Storefront.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:103"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:106"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:109"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:112"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:124"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:133"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:136"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:139"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:142"
            },
            {
              "label": "_spotMinted",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ERC721AStoreFront",
              "src": "contracts/ERC721AStoreFront.sol:146"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "mintPrice",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Storefront",
              "src": "contracts/Storefront.sol:8"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "Storefront",
              "src": "contracts/Storefront.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)6857_storage)": {
              "label": "mapping(uint256 => struct ERC721AStoreFront.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)6857_storage": {
              "label": "struct ERC721AStoreFront.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/Diamond.sol:Diamond": {
        "src": "contracts/diamond/Diamond.sol:35",
        "version": {
          "withMetadata": "7b2b2b21bdd5a7309c2991625550c7277e4c881b0c08f6388c1cb18f05b7a2fe",
          "withoutMetadata": "7b2b2b21bdd5a7309c2991625550c7277e4c881b0c08f6388c1cb18f05b7a2fe",
          "linkedWithoutMetadata": "7b2b2b21bdd5a7309c2991625550c7277e4c881b0c08f6388c1cb18f05b7a2fe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(struct IDiamond.FacetCut[],(address,address,bytes,address,address,uint256,uint256))",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Diamond",
            "src": "contracts/diamond/Diamond.sol:37"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/DiamondCutFacet.sol:DiamondCutFacet": {
        "src": "contracts/diamond/facets/DiamondCutFacet.sol:15",
        "version": {
          "withMetadata": "e1faef91f95501f93cf721f2630eb8804e42f8ce107a09998c5113f029473c99",
          "withoutMetadata": "e1faef91f95501f93cf721f2630eb8804e42f8ce107a09998c5113f029473c99",
          "linkedWithoutMetadata": "e1faef91f95501f93cf721f2630eb8804e42f8ce107a09998c5113f029473c99"
        },
        "inherit": [
          "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut",
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet": {
        "src": "contracts/diamond/facets/DiamondLoupeFacet.sol:15",
        "version": {
          "withMetadata": "12cebaae8bbb1f5dede73b0977a1be8c9e214d4cbbfc4ae3ad18ed57b550cf6d",
          "withoutMetadata": "12cebaae8bbb1f5dede73b0977a1be8c9e214d4cbbfc4ae3ad18ed57b550cf6d",
          "linkedWithoutMetadata": "12cebaae8bbb1f5dede73b0977a1be8c9e214d4cbbfc4ae3ad18ed57b550cf6d"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC165.sol:IERC165",
          "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe"
        ],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/OwnershipFacet.sol:OwnershipFacet": {
        "src": "contracts/diamond/facets/OwnershipFacet.sol:7",
        "version": {
          "withMetadata": "3697d7beaba4efc0f4c1d92b27bf69e7b0d49956fdb6555775a61dc728d20470",
          "withoutMetadata": "3697d7beaba4efc0f4c1d92b27bf69e7b0d49956fdb6555775a61dc728d20470",
          "linkedWithoutMetadata": "3697d7beaba4efc0f4c1d92b27bf69e7b0d49956fdb6555775a61dc728d20470"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC173.sol:IERC173"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/ManagementFacet.sol:IERC20": {
        "src": "contracts/diamond/facets/custom/ManagementFacet.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/ManagementFacet.sol:ManagementFacet": {
        "src": "contracts/diamond/facets/custom/ManagementFacet.sol:11",
        "version": {
          "withMetadata": "d2936b0e4f2899241cfae63bea850ce83c4b4aab8b05357200501f324f07c889",
          "withoutMetadata": "d2936b0e4f2899241cfae63bea850ce83c4b4aab8b05357200501f324f07c889",
          "linkedWithoutMetadata": "d2936b0e4f2899241cfae63bea850ce83c4b4aab8b05357200501f324f07c889"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPlatformFee(uint256)",
          "setPremiumDiscount(uint256)",
          "setWETHAddress(address)",
          "setPremiumNftAddress(address)",
          "getPremiumNftAddress()",
          "setMarketplacePaused(bool)",
          "withdrawETH()",
          "withdrawERC20(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:IERC20": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:IERC2981": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:Ownable": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/facets/custom/TransactFacet.sol:TransactFacet": {
        "src": "contracts/diamond/facets/custom/TransactFacet.sol:25",
        "version": {
          "withMetadata": "952270f76d245c0783d69f5c28bae4b052ff548e8316ac77847ec6d157c4da2c",
          "withoutMetadata": "952270f76d245c0783d69f5c28bae4b052ff548e8316ac77847ec6d157c4da2c",
          "linkedWithoutMetadata": "952270f76d245c0783d69f5c28bae4b052ff548e8316ac77847ec6d157c4da2c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "createOrderHash((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256))",
          "getDomainSeparator()",
          "domain()",
          "cancelOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes))",
          "cancelAllOrders()",
          "validateOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),bytes32)",
          "acceptOrder(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),uint256)",
          "batchAcceptOrder(struct TransactFacet.Order[],uint256[])",
          "acceptCollectionOffer(((address payable,uint8,(uint8,address,uint256,uint256),(uint8,address,uint256,uint256),address payable,uint256,uint256,uint256,uint256),bytes),uint256,uint256)",
          "isPremiumHolder(address)",
          "verifySignature(bytes32,bytes,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IDiamond.sol:IDiamond": {
        "src": "contracts/diamond/interfaces/IDiamond.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut": {
        "src": "contracts/diamond/interfaces/IDiamondCut.sol:11",
        "inherit": [
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe": {
        "src": "contracts/diamond/interfaces/IDiamondLoupe.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IERC165.sol:IERC165": {
        "src": "contracts/diamond/interfaces/IERC165.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/interfaces/IERC173.sol:IERC173": {
        "src": "contracts/diamond/interfaces/IERC173.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/libraries/LibDiamond.sol:LibDiamond": {
        "src": "contracts/diamond/libraries/LibDiamond.sol:30",
        "version": {
          "withMetadata": "73893e2d2271c59b4cc70700eb3ec689cfc55b8f807f5f4dd7bc35ee6ada00fd",
          "withoutMetadata": "73893e2d2271c59b4cc70700eb3ec689cfc55b8f807f5f4dd7bc35ee6ada00fd",
          "linkedWithoutMetadata": "73893e2d2271c59b4cc70700eb3ec689cfc55b8f807f5f4dd7bc35ee6ada00fd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/libraries/SharedStorage.sol:SharedStorage": {
        "src": "contracts/diamond/libraries/SharedStorage.sol:4",
        "version": {
          "withMetadata": "ca3e334ee7f22aca12973d87e9902de251c941c8a15409f37d3db2dc61007e15",
          "withoutMetadata": "ca3e334ee7f22aca12973d87e9902de251c941c8a15409f37d3db2dc61007e15",
          "linkedWithoutMetadata": "ca3e334ee7f22aca12973d87e9902de251c941c8a15409f37d3db2dc61007e15"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondInit.sol:25",
        "version": {
          "withMetadata": "569e58ed4bf3672065102ff2ef3d988fe975cb654a5ff92eb480bf41f6b4bff3",
          "withoutMetadata": "569e58ed4bf3672065102ff2ef3d988fe975cb654a5ff92eb480bf41f6b4bff3",
          "linkedWithoutMetadata": "569e58ed4bf3672065102ff2ef3d988fe975cb654a5ff92eb480bf41f6b4bff3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "init()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:DiamondMultiInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:15",
        "version": {
          "withMetadata": "fd12cbf60b0582a71a010ded73b38c2f8683203db72f0ccc2db6c93701fce4c2",
          "withoutMetadata": "fd12cbf60b0582a71a010ded73b38c2f8683203db72f0ccc2db6c93701fce4c2",
          "linkedWithoutMetadata": "fd12cbf60b0582a71a010ded73b38c2f8683203db72f0ccc2db6c93701fce4c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "multiInit(address[],bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/Base.sol:Base": {
        "src": "contracts/libraries/Base.sol:4",
        "version": {
          "withMetadata": "f4654be4afca3bc80c3479d610a84c613bc5eb60a096183aadf89f65f4084ff7",
          "withoutMetadata": "f4654be4afca3bc80c3479d610a84c613bc5eb60a096183aadf89f65f4084ff7",
          "linkedWithoutMetadata": "f4654be4afca3bc80c3479d610a84c613bc5eb60a096183aadf89f65f4084ff7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts/libraries/Base.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/Guardians.sol:Guardians": {
        "src": "contracts/libraries/Guardians.sol:13",
        "version": {
          "withMetadata": "a580726bff4247075788f64ca14bbf36ef8dbac11005796e8e7b0d5b36df7f04",
          "withoutMetadata": "a580726bff4247075788f64ca14bbf36ef8dbac11005796e8e7b0d5b36df7f04",
          "linkedWithoutMetadata": "a580726bff4247075788f64ca14bbf36ef8dbac11005796e8e7b0d5b36df7f04"
        },
        "inherit": [
          "contracts/libraries/Base.sol:Base"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "lockAccount()",
          "unlockAccount()",
          "changeSigner(address)",
          "addGuardians(address[])",
          "cancelGuardianAddition()",
          "executeGuardianRemoval(address[])",
          "cancelGuardianRemoval()",
          "removeGuardianExplicitly(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Guardians",
            "src": "contracts/libraries/Guardians.sol:92"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ONE_DAY",
            "src": "contracts/libraries/Guardians.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isLocked",
            "src": "contracts/libraries/Guardians.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "guardiansCount",
            "src": "contracts/libraries/Guardians.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IRegistry)14839",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:15"
            },
            {
              "label": "ONE_DAY",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:17"
            },
            {
              "label": "isLocked",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:26"
            },
            {
              "label": "guardiansCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:29"
            },
            {
              "label": "guardiansList",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:32"
            },
            {
              "label": "guardianAdditionTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:35"
            },
            {
              "label": "guardianRemovalTimestamp",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:36"
            },
            {
              "label": "guardianAdditionCancellationTimestamp",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:37"
            },
            {
              "label": "guardianRemovalCancellationTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:38"
            },
            {
              "label": "guardiansSignerChoice",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:41"
            },
            {
              "label": "guardiansUnlockAgreementCount",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:44"
            },
            {
              "label": "isGuardian",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:47"
            },
            {
              "label": "explicitRemovalVote",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:50"
            },
            {
              "label": "guardiansUnlockVote",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Guardians",
              "src": "contracts/libraries/Guardians.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)14839": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/Guardians.sol:IRegistry": {
        "src": "contracts/libraries/Guardians.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addGuardians(address[])",
          "removeGuardians(address[])",
          "changeOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/libraries/SpendLimit.sol:SpendLimit": {
        "src": "contracts/libraries/SpendLimit.sol:5",
        "version": {
          "withMetadata": "cecf40eeecfafb9fc56bdde0f9b40d1d921f55b329ea77a9a81e4d56152edcb2",
          "withoutMetadata": "cecf40eeecfafb9fc56bdde0f9b40d1d921f55b329ea77a9a81e4d56152edcb2",
          "linkedWithoutMetadata": "cecf40eeecfafb9fc56bdde0f9b40d1d921f55b329ea77a9a81e4d56152edcb2"
        },
        "inherit": [
          "contracts/libraries/Base.sol:Base"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setSpendingLimit(address,uint256)",
          "removeSpendingLimit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "ONE_DAY",
            "src": "contracts/libraries/SpendLimit.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Base",
              "src": "contracts/libraries/Base.sol:5"
            },
            {
              "label": "ONE_DAY",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SpendLimit",
              "src": "contracts/libraries/SpendLimit.sol:7"
            },
            {
              "label": "limits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(Limit)15854_storage)",
              "contract": "SpendLimit",
              "src": "contracts/libraries/SpendLimit.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Limit)15854_storage)": {
              "label": "mapping(address => struct SpendLimit.Limit)",
              "numberOfBytes": "32"
            },
            "t_struct(Limit)15854_storage": {
              "label": "struct SpendLimit.Limit",
              "members": [
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "available",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "resetTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    },
    {
      "@matterlabs/zksync-contracts/l2/system-contracts/BootloaderUtilities.sol:BootloaderUtilities": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/BootloaderUtilities.sol:15",
        "version": {
          "withMetadata": "2c3f591246bb0afccb479a5bac2bed73024a850a30ccdb7f6f739ec66c9ebe7c",
          "withoutMetadata": "2c3f591246bb0afccb479a5bac2bed73024a850a30ccdb7f6f739ec66c9ebe7c",
          "linkedWithoutMetadata": "2c3f591246bb0afccb479a5bac2bed73024a850a30ccdb7f6f739ec66c9ebe7c"
        },
        "inherit": [
          "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IBootloaderUtilities.sol:IBootloaderUtilities"
        ],
        "libraries": [],
        "methods": [
          "getTransactionHashes((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IAccountCodeStorage.sol:IAccountCodeStorage": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IAccountCodeStorage.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storeAccountConstructingCodeHash(address,bytes32)",
          "storeAccountConstructedCodeHash(address,bytes32)",
          "markAccountCodeHashAsConstructed(address)",
          "getRawCodeHash(address)",
          "getCodeHash(uint256)",
          "getCodeSize(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IBootloaderUtilities.sol:IBootloaderUtilities": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IBootloaderUtilities.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransactionHashes((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IBytecodeCompressor.sol:IBytecodeCompressor": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IBytecodeCompressor.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "publishCompressedBytecode(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IContractDeployer.sol:IContractDeployer": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IContractDeployer.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNewAddressCreate2(address,bytes32,bytes32,bytes)",
          "getNewAddressCreate(address,uint256)",
          "create2(bytes32,bytes32,bytes)",
          "create2Account(bytes32,bytes32,bytes,uint8)",
          "create(bytes32,bytes32,bytes)",
          "createAccount(bytes32,bytes32,bytes,uint8)",
          "getAccountInfo(address)",
          "updateAccountVersion(uint8)",
          "updateNonceOrdering(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IEthToken.sol:IEthToken": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IEthToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(uint256)",
          "transferFromTo(address,address,uint256)",
          "totalSupply()",
          "name()",
          "symbol()",
          "decimals()",
          "mint(address,uint256)",
          "withdraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IImmutableSimulator.sol:IImmutableSimulator": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IImmutableSimulator.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getImmutable(address,uint256)",
          "setImmutables(address,struct ImmutableData[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IKnownCodesStorage.sol:IKnownCodesStorage": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IKnownCodesStorage.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "markFactoryDeps(bool,bytes32[])",
          "markBytecodeAsPublished(bytes32,bytes32,uint256)",
          "getMarker(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IL1Messenger.sol:IL1Messenger": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IL1Messenger.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "sendToL1(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/INonceHolder.sol:INonceHolder": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/INonceHolder.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getMinNonce(address)",
          "getRawNonce(address)",
          "increaseMinNonce(uint256)",
          "setValueUnderNonce(uint256,uint256)",
          "getValueUnderNonce(uint256)",
          "incrementMinNonceIfEquals(uint256)",
          "getDeploymentNonce(address)",
          "incrementDeploymentNonce(address)",
          "validateNonceUsage(address,uint256,bool)",
          "isNonceUsed(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IPaymaster.sol:IPaymaster": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IPaymaster.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateAndPayForPaymasterTransaction(bytes32,bytes32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes))",
          "postTransaction(bytes,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes),bytes32,bytes32,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IPaymasterFlow.sol:IPaymasterFlow": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IPaymasterFlow.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "general(bytes)",
          "approvalBased(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/ISystemContext.sol:ISystemContext": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/ISystemContext.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "origin()",
          "gasPrice()",
          "blockGasLimit()",
          "coinbase()",
          "difficulty()",
          "baseFee()",
          "blockHash(uint256)",
          "getBlockHashEVM(uint256)",
          "getBlockNumberAndTimestamp()",
          "getBlockNumber()",
          "getBlockTimestamp()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/libraries/EfficientCall.sol:EfficientCall": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/libraries/EfficientCall.sol:31",
        "version": {
          "withMetadata": "af4b308516c34f2f331ee7e17d2ba1fc4b1d2ce753d9146f9706689aaf51c7c9",
          "withoutMetadata": "af4b308516c34f2f331ee7e17d2ba1fc4b1d2ce753d9146f9706689aaf51c7c9",
          "linkedWithoutMetadata": "af4b308516c34f2f331ee7e17d2ba1fc4b1d2ce753d9146f9706689aaf51c7c9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/libraries/RLPEncoder.sol:RLPEncoder": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/libraries/RLPEncoder.sol:5",
        "version": {
          "withMetadata": "8ec656c97e2a0e69b2a5454686d30f27e492a85274f198961ba76e0537d94f54",
          "withoutMetadata": "8ec656c97e2a0e69b2a5454686d30f27e492a85274f198961ba76e0537d94f54",
          "linkedWithoutMetadata": "8ec656c97e2a0e69b2a5454686d30f27e492a85274f198961ba76e0537d94f54"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/libraries/SystemContractHelper.sol:ISystemContract": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/libraries/SystemContractHelper.sol:336",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/libraries/SystemContractHelper.sol:SystemContractHelper": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/libraries/SystemContractHelper.sol:41",
        "version": {
          "withMetadata": "b20297500665886974536454c24be20816d73e2efd2885b04222717c92b6a23e",
          "withoutMetadata": "b20297500665886974536454c24be20816d73e2efd2885b04222717c92b6a23e",
          "linkedWithoutMetadata": "b20297500665886974536454c24be20816d73e2efd2885b04222717c92b6a23e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/libraries/SystemContractsCaller.sol:SystemContractsCaller": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/libraries/SystemContractsCaller.sol:67",
        "version": {
          "withMetadata": "5e2b3afd3f2d66b17b502c4eb9fb25d68fcb279a914155df2592fd64ae1b9296",
          "withoutMetadata": "5e2b3afd3f2d66b17b502c4eb9fb25d68fcb279a914155df2592fd64ae1b9296",
          "linkedWithoutMetadata": "5e2b3afd3f2d66b17b502c4eb9fb25d68fcb279a914155df2592fd64ae1b9296"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/libraries/TransactionHelper.sol:TransactionHelper": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/libraries/TransactionHelper.sol:77",
        "version": {
          "withMetadata": "fb6ace10f0418e1b857a8ea16373413dc36747929456b840124ba1b962320b1d",
          "withoutMetadata": "fb6ace10f0418e1b857a8ea16373413dc36747929456b840124ba1b962320b1d",
          "linkedWithoutMetadata": "fb6ace10f0418e1b857a8ea16373413dc36747929456b840124ba1b962320b1d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/libraries/Utils.sol:Utils": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/libraries/Utils.sol:10",
        "version": {
          "withMetadata": "8bef1b2fa15a3bf7b9e414e8073649803d2d77942c80dd53a67921e832649bf8",
          "withoutMetadata": "8bef1b2fa15a3bf7b9e414e8073649803d2d77942c80dd53a67921e832649bf8",
          "linkedWithoutMetadata": "8bef1b2fa15a3bf7b9e414e8073649803d2d77942c80dd53a67921e832649bf8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/token/ERC20/IERC20.sol:IERC20": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "7a2902bbeb4137f81ce163270cd22eaefaaf62b974016c60819ff25a80af97ca",
          "withoutMetadata": "7a2902bbeb4137f81ce163270cd22eaefaaf62b974016c60819ff25a80af97ca",
          "linkedWithoutMetadata": "7a2902bbeb4137f81ce163270cd22eaefaaf62b974016c60819ff25a80af97ca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/utils/Address.sol:Address": {
        "src": "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/utils/Address.sol:9",
        "version": {
          "withMetadata": "d35e28d4cdaaf5b2a51124970f9dada4bb7cb34bf2277a0373db6ed721503fe7",
          "withoutMetadata": "d35e28d4cdaaf5b2a51124970f9dada4bb7cb34bf2277a0373db6ed721503fe7",
          "linkedWithoutMetadata": "d35e28d4cdaaf5b2a51124970f9dada4bb7cb34bf2277a0373db6ed721503fe7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/utils/Address.sol:240"
          },
          {
            "kind": "delegatecall",
            "src": "@matterlabs/zksync-contracts/l2/system-contracts/openzeppelin/utils/Address.sol:240"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "8d6e67235a26fd2696ea1e612bdcb2efeb8917071c1a7224b890b7427eb21eeb",
          "withoutMetadata": "8d6e67235a26fd2696ea1e612bdcb2efeb8917071c1a7224b890b7427eb21eeb",
          "linkedWithoutMetadata": "8d6e67235a26fd2696ea1e612bdcb2efeb8917071c1a7224b890b7427eb21eeb"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "6da582fa6cf179830d811f422bf38cf810581469f0cf67bf80ab4e49de0ecc51",
          "withoutMetadata": "6da582fa6cf179830d811f422bf38cf810581469f0cf67bf80ab4e49de0ecc51",
          "linkedWithoutMetadata": "6da582fa6cf179830d811f422bf38cf810581469f0cf67bf80ab4e49de0ecc51"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "a5ba88d34c9e819b1b6214f7b8aea8dd0f7748a89885c2c94b90e33000e9bcaf",
          "withoutMetadata": "a5ba88d34c9e819b1b6214f7b8aea8dd0f7748a89885c2c94b90e33000e9bcaf",
          "linkedWithoutMetadata": "a5ba88d34c9e819b1b6214f7b8aea8dd0f7748a89885c2c94b90e33000e9bcaf"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "e1c3ce28cf73f3382cffba45c2be197f1e666a02f0c7acf671ef0bc93d928b8f",
          "withoutMetadata": "e1c3ce28cf73f3382cffba45c2be197f1e666a02f0c7acf671ef0bc93d928b8f",
          "linkedWithoutMetadata": "e1c3ce28cf73f3382cffba45c2be197f1e666a02f0c7acf671ef0bc93d928b8f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "46b8f30da5dc3652ff9b9b515fca5a537c29d4908727a6618c2fbee9443dd5ee",
          "withoutMetadata": "46b8f30da5dc3652ff9b9b515fca5a537c29d4908727a6618c2fbee9443dd5ee",
          "linkedWithoutMetadata": "46b8f30da5dc3652ff9b9b515fca5a537c29d4908727a6618c2fbee9443dd5ee"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "0f9147f5200be5fe1d62ad2e59e12552ac724365c8b0d994bc554d17817fc2f5",
          "withoutMetadata": "0f9147f5200be5fe1d62ad2e59e12552ac724365c8b0d994bc554d17817fc2f5",
          "linkedWithoutMetadata": "0f9147f5200be5fe1d62ad2e59e12552ac724365c8b0d994bc554d17817fc2f5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "52ff722e4387559043d3cff66e6d985b2fbfcd986e77dbaeced3997a7627d19a",
          "withoutMetadata": "52ff722e4387559043d3cff66e6d985b2fbfcd986e77dbaeced3997a7627d19a",
          "linkedWithoutMetadata": "52ff722e4387559043d3cff66e6d985b2fbfcd986e77dbaeced3997a7627d19a"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "ea41a1e1ee0057b9a7d99ace92c8dd31a01276a81d8b84272206fc8a1bd47304",
          "withoutMetadata": "ea41a1e1ee0057b9a7d99ace92c8dd31a01276a81d8b84272206fc8a1bd47304",
          "linkedWithoutMetadata": "ea41a1e1ee0057b9a7d99ace92c8dd31a01276a81d8b84272206fc8a1bd47304"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "df1a990402d84fa57084970528c3cc1f563a48f76c9dc05c7aa8e23e1d510098",
          "withoutMetadata": "df1a990402d84fa57084970528c3cc1f563a48f76c9dc05c7aa8e23e1d510098",
          "linkedWithoutMetadata": "df1a990402d84fa57084970528c3cc1f563a48f76c9dc05c7aa8e23e1d510098"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "ade9fea924073c40974c44d58a1b16f8c27b0f5df519a9c13d08cc6ec7aaa4cd",
          "withoutMetadata": "ade9fea924073c40974c44d58a1b16f8c27b0f5df519a9c13d08cc6ec7aaa4cd",
          "linkedWithoutMetadata": "ade9fea924073c40974c44d58a1b16f8c27b0f5df519a9c13d08cc6ec7aaa4cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "83624c834937e8d0e15c028720116a1890383a6f50d9347960e97ee7eed7c50f",
          "withoutMetadata": "83624c834937e8d0e15c028720116a1890383a6f50d9347960e97ee7eed7c50f",
          "linkedWithoutMetadata": "83624c834937e8d0e15c028720116a1890383a6f50d9347960e97ee7eed7c50f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "a595b9ed939628615c772f2b5243d11608df479dbad244cbe9a87a8f641be570",
          "withoutMetadata": "a595b9ed939628615c772f2b5243d11608df479dbad244cbe9a87a8f641be570",
          "linkedWithoutMetadata": "a595b9ed939628615c772f2b5243d11608df479dbad244cbe9a87a8f641be570"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "f849f086abe51e2157623735d38b86ef5cf8e87964a69bf3e7cc5db6ed6fe321",
          "withoutMetadata": "f849f086abe51e2157623735d38b86ef5cf8e87964a69bf3e7cc5db6ed6fe321",
          "linkedWithoutMetadata": "f849f086abe51e2157623735d38b86ef5cf8e87964a69bf3e7cc5db6ed6fe321"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts/Greeter.sol:4",
        "version": {
          "withMetadata": "55f04acfad1cb149a6da3c9353547fde01b804f79374e784a1cb19a3fb8c83f3",
          "withoutMetadata": "55f04acfad1cb149a6da3c9353547fde01b804f79374e784a1cb19a3fb8c83f3",
          "linkedWithoutMetadata": "55f04acfad1cb149a6da3c9353547fde01b804f79374e784a1cb19a3fb8c83f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:5"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/Diamond.sol:Diamond": {
        "src": "contracts/diamond/Diamond.sol:29",
        "version": {
          "withMetadata": "196906de739c52ad3d5614eef22d6fcc2ef0350f19a295393f47e35676377c22",
          "withoutMetadata": "196906de739c52ad3d5614eef22d6fcc2ef0350f19a295393f47e35676377c22",
          "linkedWithoutMetadata": "196906de739c52ad3d5614eef22d6fcc2ef0350f19a295393f47e35676377c22"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(struct IDiamond.FacetCut[],(address,address,bytes))",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Diamond",
            "src": "contracts/diamond/Diamond.sol:31"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/DiamondCutFacet.sol:DiamondCutFacet": {
        "src": "contracts/diamond/facets/DiamondCutFacet.sol:15",
        "version": {
          "withMetadata": "84444286e93b382f4d4170d75820c470ddcff66034ef4ccae20be16aa047155d",
          "withoutMetadata": "84444286e93b382f4d4170d75820c470ddcff66034ef4ccae20be16aa047155d",
          "linkedWithoutMetadata": "84444286e93b382f4d4170d75820c470ddcff66034ef4ccae20be16aa047155d"
        },
        "inherit": [
          "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut",
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet": {
        "src": "contracts/diamond/facets/DiamondLoupeFacet.sol:15",
        "version": {
          "withMetadata": "1a19b87d99d56a3cb639436b5c499d6b1a13a0f7ea9dde739b12735e3c3ae310",
          "withoutMetadata": "1a19b87d99d56a3cb639436b5c499d6b1a13a0f7ea9dde739b12735e3c3ae310",
          "linkedWithoutMetadata": "1a19b87d99d56a3cb639436b5c499d6b1a13a0f7ea9dde739b12735e3c3ae310"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC165.sol:IERC165",
          "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe"
        ],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/OwnershipFacet.sol:OwnershipFacet": {
        "src": "contracts/diamond/facets/OwnershipFacet.sol:7",
        "version": {
          "withMetadata": "85c45f97d8b58d429fb9b575407e22ba812695ab20405eefffb3daa9b8c95879",
          "withoutMetadata": "85c45f97d8b58d429fb9b575407e22ba812695ab20405eefffb3daa9b8c95879",
          "linkedWithoutMetadata": "85c45f97d8b58d429fb9b575407e22ba812695ab20405eefffb3daa9b8c95879"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC173.sol:IERC173"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/Test1Facet.sol:Test1Facet": {
        "src": "contracts/diamond/facets/Test1Facet.sol:33",
        "version": {
          "withMetadata": "a93e20a1de616b0bde68dca1b6234d83c343bd3e87d7f4f051a872f8f9632ec7",
          "withoutMetadata": "a93e20a1de616b0bde68dca1b6234d83c343bd3e87d7f4f051a872f8f9632ec7",
          "linkedWithoutMetadata": "a93e20a1de616b0bde68dca1b6234d83c343bd3e87d7f4f051a872f8f9632ec7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test1Func1()",
          "test1Func2()",
          "test1Func3()",
          "test1Func4()",
          "test1Func5()",
          "test1Func6()",
          "test1Func7()",
          "test1Func8()",
          "test1Func9()",
          "test1Func10()",
          "test1Func11()",
          "test1Func12()",
          "test1Func13()",
          "test1Func14()",
          "test1Func15()",
          "test1Func16()",
          "test1Func17()",
          "test1Func18()",
          "test1Func19()",
          "test1Func20()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/Test1Facet.sol:TestLib": {
        "src": "contracts/diamond/facets/Test1Facet.sol:6",
        "version": {
          "withMetadata": "0ec3cd124f0e5581b6abb6a821ac3306acafe2b7c0e1d3ad74e9bef96edeb904",
          "withoutMetadata": "0ec3cd124f0e5581b6abb6a821ac3306acafe2b7c0e1d3ad74e9bef96edeb904",
          "linkedWithoutMetadata": "0ec3cd124f0e5581b6abb6a821ac3306acafe2b7c0e1d3ad74e9bef96edeb904"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/Test2Facet.sol:Test2Facet": {
        "src": "contracts/diamond/facets/Test2Facet.sol:4",
        "version": {
          "withMetadata": "9a748743bc3b8413ba22f6549125aea98814ae382a82d71d6e8b141f696c00e1",
          "withoutMetadata": "9a748743bc3b8413ba22f6549125aea98814ae382a82d71d6e8b141f696c00e1",
          "linkedWithoutMetadata": "9a748743bc3b8413ba22f6549125aea98814ae382a82d71d6e8b141f696c00e1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test2Func1()",
          "test2Func2()",
          "test2Func3()",
          "test2Func4()",
          "test2Func5()",
          "test2Func6()",
          "test2Func7()",
          "test2Func8()",
          "test2Func9()",
          "test2Func10()",
          "test2Func11()",
          "test2Func12()",
          "test2Func13()",
          "test2Func14()",
          "test2Func15()",
          "test2Func16()",
          "test2Func17()",
          "test2Func18()",
          "test2Func19()",
          "test2Func20()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IDiamond.sol:IDiamond": {
        "src": "contracts/diamond/interfaces/IDiamond.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut": {
        "src": "contracts/diamond/interfaces/IDiamondCut.sol:11",
        "inherit": [
          "contracts/diamond/interfaces/IDiamond.sol:IDiamond"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamond.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe": {
        "src": "contracts/diamond/interfaces/IDiamondLoupe.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IERC165.sol:IERC165": {
        "src": "contracts/diamond/interfaces/IERC165.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IERC173.sol:IERC173": {
        "src": "contracts/diamond/interfaces/IERC173.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/libraries/LibDiamond.sol:LibDiamond": {
        "src": "contracts/diamond/libraries/LibDiamond.sol:30",
        "version": {
          "withMetadata": "83d9185718b1f687461863390ada7a1575aacaa1e5959933e5357b31c0c362af",
          "withoutMetadata": "83d9185718b1f687461863390ada7a1575aacaa1e5959933e5357b31c0c362af",
          "linkedWithoutMetadata": "83d9185718b1f687461863390ada7a1575aacaa1e5959933e5357b31c0c362af"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondInit.sol:24",
        "version": {
          "withMetadata": "15001c1df4cb9728ce0c2f225ea6a144273dc70716bea3649d2fe07cf791e89e",
          "withoutMetadata": "15001c1df4cb9728ce0c2f225ea6a144273dc70716bea3649d2fe07cf791e89e",
          "linkedWithoutMetadata": "15001c1df4cb9728ce0c2f225ea6a144273dc70716bea3649d2fe07cf791e89e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "init()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:DiamondMultiInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondMultiInit.sol:15",
        "version": {
          "withMetadata": "b98d0ca7b91220d9366ec6c6cc844953f731a6eb1bf19c053ce79735fd794c10",
          "withoutMetadata": "b98d0ca7b91220d9366ec6c6cc844953f731a6eb1bf19c053ce79735fd794c10",
          "linkedWithoutMetadata": "b98d0ca7b91220d9366ec6c6cc844953f731a6eb1bf19c053ce79735fd794c10"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "multiInit(address[],bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:181"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/erc20/MyERC20Token.sol:MyERC20Token": {
        "src": "contracts/erc20/MyERC20Token.sol:12",
        "version": {
          "withMetadata": "4c884454b0e5df172f556f3d0cfd812432d4f8a99f8dc68ac2d5a1f0493e026b",
          "withoutMetadata": "4c884454b0e5df172f556f3d0cfd812432d4f8a99f8dc68ac2d5a1f0493e026b",
          "linkedWithoutMetadata": "4c884454b0e5df172f556f3d0cfd812432d4f8a99f8dc68ac2d5a1f0493e026b"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyERC20Token",
            "src": "contracts/erc20/MyERC20Token.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/nft/MyNFT.sol:MyNFT": {
        "src": "contracts/nft/MyNFT.sol:14",
        "version": {
          "withMetadata": "6769cb8fe7615b46846b06938c45ce40f5567f0bf9bffe7dfdb422b28ccf24e1",
          "withoutMetadata": "6769cb8fe7615b46846b06938c45ce40f5567f0bf9bffe7dfdb422b28ccf24e1",
          "linkedWithoutMetadata": "6769cb8fe7615b46846b06938c45ce40f5567f0bf9bffe7dfdb422b28ccf24e1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string)",
          "mint(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyNFT",
            "src": "contracts/nft/MyNFT.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_tokenIdTracker",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(Counter)9365_storage",
              "contract": "MyNFT",
              "src": "contracts/nft/MyNFT.sol:16"
            },
            {
              "label": "_baseTokenURI",
              "offset": 0,
              "slot": "12",
              "type": "t_string_storage",
              "contract": "MyNFT",
              "src": "contracts/nft/MyNFT.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)9365_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/paymasters/ApprovalPaymaster.sol:ApprovalPaymaster": {
        "src": "contracts/paymasters/ApprovalPaymaster.sol:15",
        "version": {
          "withMetadata": "0465d9eabcb2c4315b581141703f16e39b009caf09c19c53246719e21be797d7",
          "withoutMetadata": "0465d9eabcb2c4315b581141703f16e39b009caf09c19c53246719e21be797d7",
          "linkedWithoutMetadata": "0465d9eabcb2c4315b581141703f16e39b009caf09c19c53246719e21be797d7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "validateAndPayForPaymasterTransaction(bytes32,bytes32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes))",
          "postTransaction(bytes,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes),bytes32,bytes32,uint8,uint256)",
          "withdraw(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ApprovalPaymaster",
            "src": "contracts/paymasters/ApprovalPaymaster.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "allowedToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ApprovalPaymaster",
              "src": "contracts/paymasters/ApprovalPaymaster.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/paymasters/GeneralPaymaster.sol:GeneralPaymaster": {
        "src": "contracts/paymasters/GeneralPaymaster.sol:14",
        "version": {
          "withMetadata": "80d0cfa64eeed5e5d2805f26057993c87e74e405e993ff0f99aa2ce95cd44cb8",
          "withoutMetadata": "80d0cfa64eeed5e5d2805f26057993c87e74e405e993ff0f99aa2ce95cd44cb8",
          "linkedWithoutMetadata": "80d0cfa64eeed5e5d2805f26057993c87e74e405e993ff0f99aa2ce95cd44cb8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validateAndPayForPaymasterTransaction(bytes32,bytes32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes))",
          "postTransaction(bytes,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[4],bytes,bytes,bytes32[],bytes,bytes),bytes32,bytes32,uint8,uint256)",
          "withdraw(address payable)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}